/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.ActividadCronograma;
import com.hitss.layer.model.ActividadCronogramaModel;
import com.hitss.layer.model.ActividadCronogramaSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ActividadCronograma service. Represents a row in the &quot;ActividadCronograma&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.ActividadCronogramaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActividadCronogramaImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see ActividadCronogramaImpl
 * @see com.hitss.layer.model.ActividadCronograma
 * @see com.hitss.layer.model.ActividadCronogramaModel
 * @generated
 */
@JSON(strict = true)
public class ActividadCronogramaModelImpl extends BaseModelImpl<ActividadCronograma>
	implements ActividadCronogramaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a actividad cronograma model instance should use the {@link com.hitss.layer.model.ActividadCronograma} interface instead.
	 */
	public static final String TABLE_NAME = "ActividadCronograma";
	public static final Object[][] TABLE_COLUMNS = {
			{ "actividadCronogramaId", Types.BIGINT },
			{ "cronogramaId", Types.BIGINT },
			{ "descripcion", Types.VARCHAR },
			{ "fechaInicio", Types.TIMESTAMP },
			{ "fechaFin", Types.TIMESTAMP },
			{ "cumplido", Types.BOOLEAN },
			{ "finalizado", Types.BOOLEAN },
			{ "tipoActividad", Types.BIGINT },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechacreamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table ActividadCronograma (actividadCronogramaId LONG,cronogramaId LONG not null primary key,descripcion VARCHAR(75) null,fechaInicio DATE null,fechaFin DATE null,cumplido BOOLEAN,finalizado BOOLEAN,tipoActividad LONG,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechacreamodifica DATE null)";
	public static final String TABLE_SQL_DROP = "drop table ActividadCronograma";
	public static final String ORDER_BY_JPQL = " ORDER BY actividadCronograma.fechacreamodifica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ActividadCronograma.fechacreamodifica ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.ActividadCronograma"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.ActividadCronograma"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ActividadCronograma toModel(ActividadCronogramaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ActividadCronograma model = new ActividadCronogramaImpl();

		model.setActividadCronogramaId(soapModel.getActividadCronogramaId());
		model.setCronogramaId(soapModel.getCronogramaId());
		model.setDescripcion(soapModel.getDescripcion());
		model.setFechaInicio(soapModel.getFechaInicio());
		model.setFechaFin(soapModel.getFechaFin());
		model.setCumplido(soapModel.getCumplido());
		model.setFinalizado(soapModel.getFinalizado());
		model.setTipoActividad(soapModel.getTipoActividad());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechacreamodifica(soapModel.getFechacreamodifica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ActividadCronograma> toModels(
		ActividadCronogramaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ActividadCronograma> models = new ArrayList<ActividadCronograma>(soapModels.length);

		for (ActividadCronogramaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.ActividadCronograma"));

	public ActividadCronogramaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _cronogramaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCronogramaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _cronogramaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ActividadCronograma.class;
	}

	@Override
	public String getModelClassName() {
		return ActividadCronograma.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("actividadCronogramaId", getActividadCronogramaId());
		attributes.put("cronogramaId", getCronogramaId());
		attributes.put("descripcion", getDescripcion());
		attributes.put("fechaInicio", getFechaInicio());
		attributes.put("fechaFin", getFechaFin());
		attributes.put("cumplido", getCumplido());
		attributes.put("finalizado", getFinalizado());
		attributes.put("tipoActividad", getTipoActividad());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechacreamodifica", getFechacreamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long actividadCronogramaId = (Long)attributes.get(
				"actividadCronogramaId");

		if (actividadCronogramaId != null) {
			setActividadCronogramaId(actividadCronogramaId);
		}

		Long cronogramaId = (Long)attributes.get("cronogramaId");

		if (cronogramaId != null) {
			setCronogramaId(cronogramaId);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Date fechaInicio = (Date)attributes.get("fechaInicio");

		if (fechaInicio != null) {
			setFechaInicio(fechaInicio);
		}

		Date fechaFin = (Date)attributes.get("fechaFin");

		if (fechaFin != null) {
			setFechaFin(fechaFin);
		}

		Boolean cumplido = (Boolean)attributes.get("cumplido");

		if (cumplido != null) {
			setCumplido(cumplido);
		}

		Boolean finalizado = (Boolean)attributes.get("finalizado");

		if (finalizado != null) {
			setFinalizado(finalizado);
		}

		Long tipoActividad = (Long)attributes.get("tipoActividad");

		if (tipoActividad != null) {
			setTipoActividad(tipoActividad);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechacreamodifica = (Date)attributes.get("fechacreamodifica");

		if (fechacreamodifica != null) {
			setFechacreamodifica(fechacreamodifica);
		}
	}

	@JSON
	@Override
	public long getActividadCronogramaId() {
		return _actividadCronogramaId;
	}

	@Override
	public void setActividadCronogramaId(long actividadCronogramaId) {
		_actividadCronogramaId = actividadCronogramaId;
	}

	@JSON
	@Override
	public long getCronogramaId() {
		return _cronogramaId;
	}

	@Override
	public void setCronogramaId(long cronogramaId) {
		_cronogramaId = cronogramaId;
	}

	@JSON
	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	@JSON
	@Override
	public Date getFechaInicio() {
		return _fechaInicio;
	}

	@Override
	public void setFechaInicio(Date fechaInicio) {
		_fechaInicio = fechaInicio;
	}

	@JSON
	@Override
	public Date getFechaFin() {
		return _fechaFin;
	}

	@Override
	public void setFechaFin(Date fechaFin) {
		_fechaFin = fechaFin;
	}

	@JSON
	@Override
	public boolean getCumplido() {
		return _cumplido;
	}

	@Override
	public boolean isCumplido() {
		return _cumplido;
	}

	@Override
	public void setCumplido(boolean cumplido) {
		_cumplido = cumplido;
	}

	@JSON
	@Override
	public boolean getFinalizado() {
		return _finalizado;
	}

	@Override
	public boolean isFinalizado() {
		return _finalizado;
	}

	@Override
	public void setFinalizado(boolean finalizado) {
		_finalizado = finalizado;
	}

	@JSON
	@Override
	public long getTipoActividad() {
		return _tipoActividad;
	}

	@Override
	public void setTipoActividad(long tipoActividad) {
		_tipoActividad = tipoActividad;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechacreamodifica() {
		return _fechacreamodifica;
	}

	@Override
	public void setFechacreamodifica(Date fechacreamodifica) {
		_fechacreamodifica = fechacreamodifica;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ActividadCronograma.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ActividadCronograma toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ActividadCronograma)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActividadCronogramaImpl actividadCronogramaImpl = new ActividadCronogramaImpl();

		actividadCronogramaImpl.setActividadCronogramaId(getActividadCronogramaId());
		actividadCronogramaImpl.setCronogramaId(getCronogramaId());
		actividadCronogramaImpl.setDescripcion(getDescripcion());
		actividadCronogramaImpl.setFechaInicio(getFechaInicio());
		actividadCronogramaImpl.setFechaFin(getFechaFin());
		actividadCronogramaImpl.setCumplido(getCumplido());
		actividadCronogramaImpl.setFinalizado(getFinalizado());
		actividadCronogramaImpl.setTipoActividad(getTipoActividad());
		actividadCronogramaImpl.setActivo(getActivo());
		actividadCronogramaImpl.setUsuariocrea(getUsuariocrea());
		actividadCronogramaImpl.setFechacrea(getFechacrea());
		actividadCronogramaImpl.setUsuariomodifica(getUsuariomodifica());
		actividadCronogramaImpl.setFechacreamodifica(getFechacreamodifica());

		actividadCronogramaImpl.resetOriginalValues();

		return actividadCronogramaImpl;
	}

	@Override
	public int compareTo(ActividadCronograma actividadCronograma) {
		int value = 0;

		value = DateUtil.compareTo(getFechacreamodifica(),
				actividadCronograma.getFechacreamodifica());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ActividadCronograma)) {
			return false;
		}

		ActividadCronograma actividadCronograma = (ActividadCronograma)obj;

		long primaryKey = actividadCronograma.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ActividadCronograma> toCacheModel() {
		ActividadCronogramaCacheModel actividadCronogramaCacheModel = new ActividadCronogramaCacheModel();

		actividadCronogramaCacheModel.actividadCronogramaId = getActividadCronogramaId();

		actividadCronogramaCacheModel.cronogramaId = getCronogramaId();

		actividadCronogramaCacheModel.descripcion = getDescripcion();

		String descripcion = actividadCronogramaCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			actividadCronogramaCacheModel.descripcion = null;
		}

		Date fechaInicio = getFechaInicio();

		if (fechaInicio != null) {
			actividadCronogramaCacheModel.fechaInicio = fechaInicio.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechaInicio = Long.MIN_VALUE;
		}

		Date fechaFin = getFechaFin();

		if (fechaFin != null) {
			actividadCronogramaCacheModel.fechaFin = fechaFin.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechaFin = Long.MIN_VALUE;
		}

		actividadCronogramaCacheModel.cumplido = getCumplido();

		actividadCronogramaCacheModel.finalizado = getFinalizado();

		actividadCronogramaCacheModel.tipoActividad = getTipoActividad();

		actividadCronogramaCacheModel.activo = getActivo();

		actividadCronogramaCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			actividadCronogramaCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechacrea = Long.MIN_VALUE;
		}

		actividadCronogramaCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechacreamodifica = getFechacreamodifica();

		if (fechacreamodifica != null) {
			actividadCronogramaCacheModel.fechacreamodifica = fechacreamodifica.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechacreamodifica = Long.MIN_VALUE;
		}

		return actividadCronogramaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{actividadCronogramaId=");
		sb.append(getActividadCronogramaId());
		sb.append(", cronogramaId=");
		sb.append(getCronogramaId());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", fechaInicio=");
		sb.append(getFechaInicio());
		sb.append(", fechaFin=");
		sb.append(getFechaFin());
		sb.append(", cumplido=");
		sb.append(getCumplido());
		sb.append(", finalizado=");
		sb.append(getFinalizado());
		sb.append(", tipoActividad=");
		sb.append(getTipoActividad());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechacreamodifica=");
		sb.append(getFechacreamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.ActividadCronograma");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>actividadCronogramaId</column-name><column-value><![CDATA[");
		sb.append(getActividadCronogramaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cronogramaId</column-name><column-value><![CDATA[");
		sb.append(getCronogramaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaInicio</column-name><column-value><![CDATA[");
		sb.append(getFechaInicio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaFin</column-name><column-value><![CDATA[");
		sb.append(getFechaFin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cumplido</column-name><column-value><![CDATA[");
		sb.append(getCumplido());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finalizado</column-name><column-value><![CDATA[");
		sb.append(getFinalizado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoActividad</column-name><column-value><![CDATA[");
		sb.append(getTipoActividad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacreamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechacreamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActividadCronograma.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ActividadCronograma.class
		};
	private long _actividadCronogramaId;
	private long _cronogramaId;
	private String _descripcion;
	private Date _fechaInicio;
	private Date _fechaFin;
	private boolean _cumplido;
	private boolean _finalizado;
	private long _tipoActividad;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechacreamodifica;
	private ActividadCronograma _escapedModel;
}