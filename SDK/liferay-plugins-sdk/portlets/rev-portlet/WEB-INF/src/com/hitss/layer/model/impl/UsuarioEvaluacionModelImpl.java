/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.UsuarioEvaluacion;
import com.hitss.layer.model.UsuarioEvaluacionModel;
import com.hitss.layer.model.UsuarioEvaluacionSoap;
import com.hitss.layer.service.persistence.UsuarioEvaluacionPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UsuarioEvaluacion service. Represents a row in the &quot;UsuarioEvaluacion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.UsuarioEvaluacionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UsuarioEvaluacionImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see UsuarioEvaluacionImpl
 * @see com.hitss.layer.model.UsuarioEvaluacion
 * @see com.hitss.layer.model.UsuarioEvaluacionModel
 * @generated
 */
@JSON(strict = true)
public class UsuarioEvaluacionModelImpl extends BaseModelImpl<UsuarioEvaluacion>
	implements UsuarioEvaluacionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a usuario evaluacion model instance should use the {@link com.hitss.layer.model.UsuarioEvaluacion} interface instead.
	 */
	public static final String TABLE_NAME = "UsuarioEvaluacion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "actividadCronogramaId", Types.BIGINT },
			{ "usuarioId", Types.BIGINT },
			{ "evaluacionId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table UsuarioEvaluacion (actividadCronogramaId LONG not null,usuarioId LONG not null,evaluacionId LONG not null,primary key (actividadCronogramaId, usuarioId, evaluacionId))";
	public static final String TABLE_SQL_DROP = "drop table UsuarioEvaluacion";
	public static final String ORDER_BY_JPQL = " ORDER BY usuarioEvaluacion.id.actividadCronogramaId ASC, usuarioEvaluacion.id.usuarioId ASC, usuarioEvaluacion.id.evaluacionId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UsuarioEvaluacion.actividadCronogramaId ASC, UsuarioEvaluacion.usuarioId ASC, UsuarioEvaluacion.evaluacionId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.UsuarioEvaluacion"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.UsuarioEvaluacion"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static UsuarioEvaluacion toModel(UsuarioEvaluacionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		UsuarioEvaluacion model = new UsuarioEvaluacionImpl();

		model.setActividadCronogramaId(soapModel.getActividadCronogramaId());
		model.setUsuarioId(soapModel.getUsuarioId());
		model.setEvaluacionId(soapModel.getEvaluacionId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<UsuarioEvaluacion> toModels(
		UsuarioEvaluacionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<UsuarioEvaluacion> models = new ArrayList<UsuarioEvaluacion>(soapModels.length);

		for (UsuarioEvaluacionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.UsuarioEvaluacion"));

	public UsuarioEvaluacionModelImpl() {
	}

	@Override
	public UsuarioEvaluacionPK getPrimaryKey() {
		return new UsuarioEvaluacionPK(_actividadCronogramaId, _usuarioId,
			_evaluacionId);
	}

	@Override
	public void setPrimaryKey(UsuarioEvaluacionPK primaryKey) {
		setActividadCronogramaId(primaryKey.actividadCronogramaId);
		setUsuarioId(primaryKey.usuarioId);
		setEvaluacionId(primaryKey.evaluacionId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new UsuarioEvaluacionPK(_actividadCronogramaId, _usuarioId,
			_evaluacionId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((UsuarioEvaluacionPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return UsuarioEvaluacion.class;
	}

	@Override
	public String getModelClassName() {
		return UsuarioEvaluacion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("actividadCronogramaId", getActividadCronogramaId());
		attributes.put("usuarioId", getUsuarioId());
		attributes.put("evaluacionId", getEvaluacionId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long actividadCronogramaId = (Long)attributes.get(
				"actividadCronogramaId");

		if (actividadCronogramaId != null) {
			setActividadCronogramaId(actividadCronogramaId);
		}

		Long usuarioId = (Long)attributes.get("usuarioId");

		if (usuarioId != null) {
			setUsuarioId(usuarioId);
		}

		Long evaluacionId = (Long)attributes.get("evaluacionId");

		if (evaluacionId != null) {
			setEvaluacionId(evaluacionId);
		}
	}

	@JSON
	@Override
	public long getActividadCronogramaId() {
		return _actividadCronogramaId;
	}

	@Override
	public void setActividadCronogramaId(long actividadCronogramaId) {
		_actividadCronogramaId = actividadCronogramaId;
	}

	@JSON
	@Override
	public long getUsuarioId() {
		return _usuarioId;
	}

	@Override
	public void setUsuarioId(long usuarioId) {
		_usuarioId = usuarioId;
	}

	@JSON
	@Override
	public long getEvaluacionId() {
		return _evaluacionId;
	}

	@Override
	public void setEvaluacionId(long evaluacionId) {
		_evaluacionId = evaluacionId;
	}

	@Override
	public UsuarioEvaluacion toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UsuarioEvaluacion)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UsuarioEvaluacionImpl usuarioEvaluacionImpl = new UsuarioEvaluacionImpl();

		usuarioEvaluacionImpl.setActividadCronogramaId(getActividadCronogramaId());
		usuarioEvaluacionImpl.setUsuarioId(getUsuarioId());
		usuarioEvaluacionImpl.setEvaluacionId(getEvaluacionId());

		usuarioEvaluacionImpl.resetOriginalValues();

		return usuarioEvaluacionImpl;
	}

	@Override
	public int compareTo(UsuarioEvaluacion usuarioEvaluacion) {
		UsuarioEvaluacionPK primaryKey = usuarioEvaluacion.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UsuarioEvaluacion)) {
			return false;
		}

		UsuarioEvaluacion usuarioEvaluacion = (UsuarioEvaluacion)obj;

		UsuarioEvaluacionPK primaryKey = usuarioEvaluacion.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<UsuarioEvaluacion> toCacheModel() {
		UsuarioEvaluacionCacheModel usuarioEvaluacionCacheModel = new UsuarioEvaluacionCacheModel();

		usuarioEvaluacionCacheModel.actividadCronogramaId = getActividadCronogramaId();

		usuarioEvaluacionCacheModel.usuarioId = getUsuarioId();

		usuarioEvaluacionCacheModel.evaluacionId = getEvaluacionId();

		return usuarioEvaluacionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{actividadCronogramaId=");
		sb.append(getActividadCronogramaId());
		sb.append(", usuarioId=");
		sb.append(getUsuarioId());
		sb.append(", evaluacionId=");
		sb.append(getEvaluacionId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.UsuarioEvaluacion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>actividadCronogramaId</column-name><column-value><![CDATA[");
		sb.append(getActividadCronogramaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>evaluacionId</column-name><column-value><![CDATA[");
		sb.append(getEvaluacionId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = UsuarioEvaluacion.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			UsuarioEvaluacion.class
		};
	private long _actividadCronogramaId;
	private long _usuarioId;
	private long _evaluacionId;
	private UsuarioEvaluacion _escapedModel;
}