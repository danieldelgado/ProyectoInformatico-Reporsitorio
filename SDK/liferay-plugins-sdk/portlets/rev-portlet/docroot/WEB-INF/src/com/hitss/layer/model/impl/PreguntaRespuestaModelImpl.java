/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.PreguntaRespuesta;
import com.hitss.layer.model.PreguntaRespuestaModel;
import com.hitss.layer.model.PreguntaRespuestaSoap;
import com.hitss.layer.service.persistence.PreguntaRespuestaPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PreguntaRespuesta service. Represents a row in the &quot;PreguntaRespuesta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.PreguntaRespuestaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PreguntaRespuestaImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see PreguntaRespuestaImpl
 * @see com.hitss.layer.model.PreguntaRespuesta
 * @see com.hitss.layer.model.PreguntaRespuestaModel
 * @generated
 */
@JSON(strict = true)
public class PreguntaRespuestaModelImpl extends BaseModelImpl<PreguntaRespuesta>
	implements PreguntaRespuestaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pregunta respuesta model instance should use the {@link com.hitss.layer.model.PreguntaRespuesta} interface instead.
	 */
	public static final String TABLE_NAME = "PreguntaRespuesta";
	public static final Object[][] TABLE_COLUMNS = {
			{ "preguntaId", Types.BIGINT },
			{ "respuestaId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table PreguntaRespuesta (preguntaId LONG not null,respuestaId LONG not null,primary key (preguntaId, respuestaId))";
	public static final String TABLE_SQL_DROP = "drop table PreguntaRespuesta";
	public static final String ORDER_BY_JPQL = " ORDER BY preguntaRespuesta.id.preguntaId ASC, preguntaRespuesta.id.respuestaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PreguntaRespuesta.preguntaId ASC, PreguntaRespuesta.respuestaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.PreguntaRespuesta"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.PreguntaRespuesta"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PreguntaRespuesta toModel(PreguntaRespuestaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PreguntaRespuesta model = new PreguntaRespuestaImpl();

		model.setPreguntaId(soapModel.getPreguntaId());
		model.setRespuestaId(soapModel.getRespuestaId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PreguntaRespuesta> toModels(
		PreguntaRespuestaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PreguntaRespuesta> models = new ArrayList<PreguntaRespuesta>(soapModels.length);

		for (PreguntaRespuestaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.PreguntaRespuesta"));

	public PreguntaRespuestaModelImpl() {
	}

	@Override
	public PreguntaRespuestaPK getPrimaryKey() {
		return new PreguntaRespuestaPK(_preguntaId, _respuestaId);
	}

	@Override
	public void setPrimaryKey(PreguntaRespuestaPK primaryKey) {
		setPreguntaId(primaryKey.preguntaId);
		setRespuestaId(primaryKey.respuestaId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new PreguntaRespuestaPK(_preguntaId, _respuestaId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((PreguntaRespuestaPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return PreguntaRespuesta.class;
	}

	@Override
	public String getModelClassName() {
		return PreguntaRespuesta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("preguntaId", getPreguntaId());
		attributes.put("respuestaId", getRespuestaId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long preguntaId = (Long)attributes.get("preguntaId");

		if (preguntaId != null) {
			setPreguntaId(preguntaId);
		}

		Long respuestaId = (Long)attributes.get("respuestaId");

		if (respuestaId != null) {
			setRespuestaId(respuestaId);
		}
	}

	@JSON
	@Override
	public long getPreguntaId() {
		return _preguntaId;
	}

	@Override
	public void setPreguntaId(long preguntaId) {
		_preguntaId = preguntaId;
	}

	@JSON
	@Override
	public long getRespuestaId() {
		return _respuestaId;
	}

	@Override
	public void setRespuestaId(long respuestaId) {
		_respuestaId = respuestaId;
	}

	@Override
	public PreguntaRespuesta toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PreguntaRespuesta)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PreguntaRespuestaImpl preguntaRespuestaImpl = new PreguntaRespuestaImpl();

		preguntaRespuestaImpl.setPreguntaId(getPreguntaId());
		preguntaRespuestaImpl.setRespuestaId(getRespuestaId());

		preguntaRespuestaImpl.resetOriginalValues();

		return preguntaRespuestaImpl;
	}

	@Override
	public int compareTo(PreguntaRespuesta preguntaRespuesta) {
		PreguntaRespuestaPK primaryKey = preguntaRespuesta.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PreguntaRespuesta)) {
			return false;
		}

		PreguntaRespuesta preguntaRespuesta = (PreguntaRespuesta)obj;

		PreguntaRespuestaPK primaryKey = preguntaRespuesta.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<PreguntaRespuesta> toCacheModel() {
		PreguntaRespuestaCacheModel preguntaRespuestaCacheModel = new PreguntaRespuestaCacheModel();

		preguntaRespuestaCacheModel.preguntaId = getPreguntaId();

		preguntaRespuestaCacheModel.respuestaId = getRespuestaId();

		return preguntaRespuestaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{preguntaId=");
		sb.append(getPreguntaId());
		sb.append(", respuestaId=");
		sb.append(getRespuestaId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.PreguntaRespuesta");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>preguntaId</column-name><column-value><![CDATA[");
		sb.append(getPreguntaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respuestaId</column-name><column-value><![CDATA[");
		sb.append(getRespuestaId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PreguntaRespuesta.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PreguntaRespuesta.class
		};
	private long _preguntaId;
	private long _respuestaId;
	private PreguntaRespuesta _escapedModel;
}