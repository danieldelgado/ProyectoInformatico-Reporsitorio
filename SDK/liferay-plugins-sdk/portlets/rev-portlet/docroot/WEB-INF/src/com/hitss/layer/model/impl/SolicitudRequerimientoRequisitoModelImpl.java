/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.SolicitudRequerimientoRequisito;
import com.hitss.layer.model.SolicitudRequerimientoRequisitoModel;
import com.hitss.layer.model.SolicitudRequerimientoRequisitoSoap;
import com.hitss.layer.service.persistence.SolicitudRequerimientoRequisitoPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SolicitudRequerimientoRequisito service. Represents a row in the &quot;SolicitudRequerimientoRequisito&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.SolicitudRequerimientoRequisitoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SolicitudRequerimientoRequisitoImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see SolicitudRequerimientoRequisitoImpl
 * @see com.hitss.layer.model.SolicitudRequerimientoRequisito
 * @see com.hitss.layer.model.SolicitudRequerimientoRequisitoModel
 * @generated
 */
@JSON(strict = true)
public class SolicitudRequerimientoRequisitoModelImpl extends BaseModelImpl<SolicitudRequerimientoRequisito>
	implements SolicitudRequerimientoRequisitoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a solicitud requerimiento requisito model instance should use the {@link com.hitss.layer.model.SolicitudRequerimientoRequisito} interface instead.
	 */
	public static final String TABLE_NAME = "SolicitudRequerimientoRequisito";
	public static final Object[][] TABLE_COLUMNS = {
			{ "solicitudRequerimientoId", Types.BIGINT },
			{ "requisitosId", Types.BIGINT },
			{ "exigible", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table SolicitudRequerimientoRequisito (solicitudRequerimientoId LONG not null,requisitosId LONG not null,exigible BOOLEAN,primary key (solicitudRequerimientoId, requisitosId))";
	public static final String TABLE_SQL_DROP = "drop table SolicitudRequerimientoRequisito";
	public static final String ORDER_BY_JPQL = " ORDER BY solicitudRequerimientoRequisito.id.solicitudRequerimientoId ASC, solicitudRequerimientoRequisito.id.requisitosId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SolicitudRequerimientoRequisito.solicitudRequerimientoId ASC, SolicitudRequerimientoRequisito.requisitosId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.SolicitudRequerimientoRequisito"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.SolicitudRequerimientoRequisito"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SolicitudRequerimientoRequisito toModel(
		SolicitudRequerimientoRequisitoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SolicitudRequerimientoRequisito model = new SolicitudRequerimientoRequisitoImpl();

		model.setSolicitudRequerimientoId(soapModel.getSolicitudRequerimientoId());
		model.setRequisitosId(soapModel.getRequisitosId());
		model.setExigible(soapModel.getExigible());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SolicitudRequerimientoRequisito> toModels(
		SolicitudRequerimientoRequisitoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SolicitudRequerimientoRequisito> models = new ArrayList<SolicitudRequerimientoRequisito>(soapModels.length);

		for (SolicitudRequerimientoRequisitoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.SolicitudRequerimientoRequisito"));

	public SolicitudRequerimientoRequisitoModelImpl() {
	}

	@Override
	public SolicitudRequerimientoRequisitoPK getPrimaryKey() {
		return new SolicitudRequerimientoRequisitoPK(_solicitudRequerimientoId,
			_requisitosId);
	}

	@Override
	public void setPrimaryKey(SolicitudRequerimientoRequisitoPK primaryKey) {
		setSolicitudRequerimientoId(primaryKey.solicitudRequerimientoId);
		setRequisitosId(primaryKey.requisitosId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new SolicitudRequerimientoRequisitoPK(_solicitudRequerimientoId,
			_requisitosId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((SolicitudRequerimientoRequisitoPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return SolicitudRequerimientoRequisito.class;
	}

	@Override
	public String getModelClassName() {
		return SolicitudRequerimientoRequisito.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("solicitudRequerimientoId", getSolicitudRequerimientoId());
		attributes.put("requisitosId", getRequisitosId());
		attributes.put("exigible", getExigible());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long solicitudRequerimientoId = (Long)attributes.get(
				"solicitudRequerimientoId");

		if (solicitudRequerimientoId != null) {
			setSolicitudRequerimientoId(solicitudRequerimientoId);
		}

		Long requisitosId = (Long)attributes.get("requisitosId");

		if (requisitosId != null) {
			setRequisitosId(requisitosId);
		}

		Boolean exigible = (Boolean)attributes.get("exigible");

		if (exigible != null) {
			setExigible(exigible);
		}
	}

	@JSON
	@Override
	public long getSolicitudRequerimientoId() {
		return _solicitudRequerimientoId;
	}

	@Override
	public void setSolicitudRequerimientoId(long solicitudRequerimientoId) {
		_solicitudRequerimientoId = solicitudRequerimientoId;
	}

	@JSON
	@Override
	public long getRequisitosId() {
		return _requisitosId;
	}

	@Override
	public void setRequisitosId(long requisitosId) {
		_requisitosId = requisitosId;
	}

	@JSON
	@Override
	public boolean getExigible() {
		return _exigible;
	}

	@Override
	public boolean isExigible() {
		return _exigible;
	}

	@Override
	public void setExigible(boolean exigible) {
		_exigible = exigible;
	}

	@Override
	public SolicitudRequerimientoRequisito toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SolicitudRequerimientoRequisito)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SolicitudRequerimientoRequisitoImpl solicitudRequerimientoRequisitoImpl = new SolicitudRequerimientoRequisitoImpl();

		solicitudRequerimientoRequisitoImpl.setSolicitudRequerimientoId(getSolicitudRequerimientoId());
		solicitudRequerimientoRequisitoImpl.setRequisitosId(getRequisitosId());
		solicitudRequerimientoRequisitoImpl.setExigible(getExigible());

		solicitudRequerimientoRequisitoImpl.resetOriginalValues();

		return solicitudRequerimientoRequisitoImpl;
	}

	@Override
	public int compareTo(
		SolicitudRequerimientoRequisito solicitudRequerimientoRequisito) {
		SolicitudRequerimientoRequisitoPK primaryKey = solicitudRequerimientoRequisito.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SolicitudRequerimientoRequisito)) {
			return false;
		}

		SolicitudRequerimientoRequisito solicitudRequerimientoRequisito = (SolicitudRequerimientoRequisito)obj;

		SolicitudRequerimientoRequisitoPK primaryKey = solicitudRequerimientoRequisito.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SolicitudRequerimientoRequisito> toCacheModel() {
		SolicitudRequerimientoRequisitoCacheModel solicitudRequerimientoRequisitoCacheModel =
			new SolicitudRequerimientoRequisitoCacheModel();

		solicitudRequerimientoRequisitoCacheModel.solicitudRequerimientoId = getSolicitudRequerimientoId();

		solicitudRequerimientoRequisitoCacheModel.requisitosId = getRequisitosId();

		solicitudRequerimientoRequisitoCacheModel.exigible = getExigible();

		return solicitudRequerimientoRequisitoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{solicitudRequerimientoId=");
		sb.append(getSolicitudRequerimientoId());
		sb.append(", requisitosId=");
		sb.append(getRequisitosId());
		sb.append(", exigible=");
		sb.append(getExigible());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.SolicitudRequerimientoRequisito");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>solicitudRequerimientoId</column-name><column-value><![CDATA[");
		sb.append(getSolicitudRequerimientoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requisitosId</column-name><column-value><![CDATA[");
		sb.append(getRequisitosId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>exigible</column-name><column-value><![CDATA[");
		sb.append(getExigible());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SolicitudRequerimientoRequisito.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SolicitudRequerimientoRequisito.class
		};
	private long _solicitudRequerimientoId;
	private long _requisitosId;
	private boolean _exigible;
	private SolicitudRequerimientoRequisito _escapedModel;
}