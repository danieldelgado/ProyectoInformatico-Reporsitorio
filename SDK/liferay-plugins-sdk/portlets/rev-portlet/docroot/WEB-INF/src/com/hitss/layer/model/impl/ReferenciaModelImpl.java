/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.Referencia;
import com.hitss.layer.model.ReferenciaModel;
import com.hitss.layer.model.ReferenciaSoap;
import com.hitss.layer.service.persistence.ReferenciaPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Referencia service. Represents a row in the &quot;Referencia&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.ReferenciaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ReferenciaImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see ReferenciaImpl
 * @see com.hitss.layer.model.Referencia
 * @see com.hitss.layer.model.ReferenciaModel
 * @generated
 */
@JSON(strict = true)
public class ReferenciaModelImpl extends BaseModelImpl<Referencia>
	implements ReferenciaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a referencia model instance should use the {@link com.hitss.layer.model.Referencia} interface instead.
	 */
	public static final String TABLE_NAME = "Referencia";
	public static final Object[][] TABLE_COLUMNS = {
			{ "referenciaId", Types.BIGINT },
			{ "usuarioId", Types.BIGINT },
			{ "empresa", Types.VARCHAR },
			{ "telefono", Types.VARCHAR },
			{ "responsable", Types.VARCHAR },
			{ "motivo", Types.VARCHAR },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Referencia (referenciaId LONG not null,usuarioId LONG not null,empresa VARCHAR(75) null,telefono VARCHAR(75) null,responsable VARCHAR(75) null,motivo VARCHAR(75) null,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechamodifica DATE null,primary key (referenciaId, usuarioId))";
	public static final String TABLE_SQL_DROP = "drop table Referencia";
	public static final String ORDER_BY_JPQL = " ORDER BY referencia.fechamodifica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Referencia.fechamodifica ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.Referencia"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.Referencia"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hitss.layer.model.Referencia"),
			true);
	public static long USUARIOID_COLUMN_BITMASK = 1L;
	public static long FECHAMODIFICA_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Referencia toModel(ReferenciaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Referencia model = new ReferenciaImpl();

		model.setReferenciaId(soapModel.getReferenciaId());
		model.setUsuarioId(soapModel.getUsuarioId());
		model.setEmpresa(soapModel.getEmpresa());
		model.setTelefono(soapModel.getTelefono());
		model.setResponsable(soapModel.getResponsable());
		model.setMotivo(soapModel.getMotivo());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechamodifica(soapModel.getFechamodifica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Referencia> toModels(ReferenciaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Referencia> models = new ArrayList<Referencia>(soapModels.length);

		for (ReferenciaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.Referencia"));

	public ReferenciaModelImpl() {
	}

	@Override
	public ReferenciaPK getPrimaryKey() {
		return new ReferenciaPK(_referenciaId, _usuarioId);
	}

	@Override
	public void setPrimaryKey(ReferenciaPK primaryKey) {
		setReferenciaId(primaryKey.referenciaId);
		setUsuarioId(primaryKey.usuarioId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ReferenciaPK(_referenciaId, _usuarioId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ReferenciaPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Referencia.class;
	}

	@Override
	public String getModelClassName() {
		return Referencia.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("referenciaId", getReferenciaId());
		attributes.put("usuarioId", getUsuarioId());
		attributes.put("empresa", getEmpresa());
		attributes.put("telefono", getTelefono());
		attributes.put("responsable", getResponsable());
		attributes.put("motivo", getMotivo());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechamodifica", getFechamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long referenciaId = (Long)attributes.get("referenciaId");

		if (referenciaId != null) {
			setReferenciaId(referenciaId);
		}

		Long usuarioId = (Long)attributes.get("usuarioId");

		if (usuarioId != null) {
			setUsuarioId(usuarioId);
		}

		String empresa = (String)attributes.get("empresa");

		if (empresa != null) {
			setEmpresa(empresa);
		}

		String telefono = (String)attributes.get("telefono");

		if (telefono != null) {
			setTelefono(telefono);
		}

		String responsable = (String)attributes.get("responsable");

		if (responsable != null) {
			setResponsable(responsable);
		}

		String motivo = (String)attributes.get("motivo");

		if (motivo != null) {
			setMotivo(motivo);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechamodifica = (Date)attributes.get("fechamodifica");

		if (fechamodifica != null) {
			setFechamodifica(fechamodifica);
		}
	}

	@JSON
	@Override
	public long getReferenciaId() {
		return _referenciaId;
	}

	@Override
	public void setReferenciaId(long referenciaId) {
		_referenciaId = referenciaId;
	}

	@JSON
	@Override
	public long getUsuarioId() {
		return _usuarioId;
	}

	@Override
	public void setUsuarioId(long usuarioId) {
		_columnBitmask |= USUARIOID_COLUMN_BITMASK;

		if (!_setOriginalUsuarioId) {
			_setOriginalUsuarioId = true;

			_originalUsuarioId = _usuarioId;
		}

		_usuarioId = usuarioId;
	}

	public long getOriginalUsuarioId() {
		return _originalUsuarioId;
	}

	@JSON
	@Override
	public String getEmpresa() {
		if (_empresa == null) {
			return StringPool.BLANK;
		}
		else {
			return _empresa;
		}
	}

	@Override
	public void setEmpresa(String empresa) {
		_empresa = empresa;
	}

	@JSON
	@Override
	public String getTelefono() {
		if (_telefono == null) {
			return StringPool.BLANK;
		}
		else {
			return _telefono;
		}
	}

	@Override
	public void setTelefono(String telefono) {
		_telefono = telefono;
	}

	@JSON
	@Override
	public String getResponsable() {
		if (_responsable == null) {
			return StringPool.BLANK;
		}
		else {
			return _responsable;
		}
	}

	@Override
	public void setResponsable(String responsable) {
		_responsable = responsable;
	}

	@JSON
	@Override
	public String getMotivo() {
		if (_motivo == null) {
			return StringPool.BLANK;
		}
		else {
			return _motivo;
		}
	}

	@Override
	public void setMotivo(String motivo) {
		_motivo = motivo;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechamodifica() {
		return _fechamodifica;
	}

	@Override
	public void setFechamodifica(Date fechamodifica) {
		_columnBitmask = -1L;

		_fechamodifica = fechamodifica;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Referencia toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Referencia)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ReferenciaImpl referenciaImpl = new ReferenciaImpl();

		referenciaImpl.setReferenciaId(getReferenciaId());
		referenciaImpl.setUsuarioId(getUsuarioId());
		referenciaImpl.setEmpresa(getEmpresa());
		referenciaImpl.setTelefono(getTelefono());
		referenciaImpl.setResponsable(getResponsable());
		referenciaImpl.setMotivo(getMotivo());
		referenciaImpl.setActivo(getActivo());
		referenciaImpl.setUsuariocrea(getUsuariocrea());
		referenciaImpl.setFechacrea(getFechacrea());
		referenciaImpl.setUsuariomodifica(getUsuariomodifica());
		referenciaImpl.setFechamodifica(getFechamodifica());

		referenciaImpl.resetOriginalValues();

		return referenciaImpl;
	}

	@Override
	public int compareTo(Referencia referencia) {
		int value = 0;

		value = DateUtil.compareTo(getFechamodifica(),
				referencia.getFechamodifica());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Referencia)) {
			return false;
		}

		Referencia referencia = (Referencia)obj;

		ReferenciaPK primaryKey = referencia.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ReferenciaModelImpl referenciaModelImpl = this;

		referenciaModelImpl._originalUsuarioId = referenciaModelImpl._usuarioId;

		referenciaModelImpl._setOriginalUsuarioId = false;

		referenciaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Referencia> toCacheModel() {
		ReferenciaCacheModel referenciaCacheModel = new ReferenciaCacheModel();

		referenciaCacheModel.referenciaId = getReferenciaId();

		referenciaCacheModel.usuarioId = getUsuarioId();

		referenciaCacheModel.empresa = getEmpresa();

		String empresa = referenciaCacheModel.empresa;

		if ((empresa != null) && (empresa.length() == 0)) {
			referenciaCacheModel.empresa = null;
		}

		referenciaCacheModel.telefono = getTelefono();

		String telefono = referenciaCacheModel.telefono;

		if ((telefono != null) && (telefono.length() == 0)) {
			referenciaCacheModel.telefono = null;
		}

		referenciaCacheModel.responsable = getResponsable();

		String responsable = referenciaCacheModel.responsable;

		if ((responsable != null) && (responsable.length() == 0)) {
			referenciaCacheModel.responsable = null;
		}

		referenciaCacheModel.motivo = getMotivo();

		String motivo = referenciaCacheModel.motivo;

		if ((motivo != null) && (motivo.length() == 0)) {
			referenciaCacheModel.motivo = null;
		}

		referenciaCacheModel.activo = getActivo();

		referenciaCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			referenciaCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			referenciaCacheModel.fechacrea = Long.MIN_VALUE;
		}

		referenciaCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechamodifica = getFechamodifica();

		if (fechamodifica != null) {
			referenciaCacheModel.fechamodifica = fechamodifica.getTime();
		}
		else {
			referenciaCacheModel.fechamodifica = Long.MIN_VALUE;
		}

		return referenciaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{referenciaId=");
		sb.append(getReferenciaId());
		sb.append(", usuarioId=");
		sb.append(getUsuarioId());
		sb.append(", empresa=");
		sb.append(getEmpresa());
		sb.append(", telefono=");
		sb.append(getTelefono());
		sb.append(", responsable=");
		sb.append(getResponsable());
		sb.append(", motivo=");
		sb.append(getMotivo());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechamodifica=");
		sb.append(getFechamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.Referencia");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>referenciaId</column-name><column-value><![CDATA[");
		sb.append(getReferenciaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>empresa</column-name><column-value><![CDATA[");
		sb.append(getEmpresa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telefono</column-name><column-value><![CDATA[");
		sb.append(getTelefono());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>responsable</column-name><column-value><![CDATA[");
		sb.append(getResponsable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>motivo</column-name><column-value><![CDATA[");
		sb.append(getMotivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Referencia.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Referencia.class
		};
	private long _referenciaId;
	private long _usuarioId;
	private long _originalUsuarioId;
	private boolean _setOriginalUsuarioId;
	private String _empresa;
	private String _telefono;
	private String _responsable;
	private String _motivo;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechamodifica;
	private long _columnBitmask;
	private Referencia _escapedModel;
}