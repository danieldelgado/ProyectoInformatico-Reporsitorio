/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.Funcion;
import com.hitss.layer.model.FuncionModel;
import com.hitss.layer.model.FuncionSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Funcion service. Represents a row in the &quot;Funcion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.FuncionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FuncionImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see FuncionImpl
 * @see com.hitss.layer.model.Funcion
 * @see com.hitss.layer.model.FuncionModel
 * @generated
 */
@JSON(strict = true)
public class FuncionModelImpl extends BaseModelImpl<Funcion>
	implements FuncionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a funcion model instance should use the {@link com.hitss.layer.model.Funcion} interface instead.
	 */
	public static final String TABLE_NAME = "Funcion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "funcionId", Types.BIGINT },
			{ "descripcion", Types.VARCHAR },
			{ "etiquetaId", Types.BIGINT },
			{ "exigible", Types.BOOLEAN },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Funcion (funcionId LONG not null primary key,descripcion VARCHAR(75) null,etiquetaId LONG,exigible BOOLEAN,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechamodifica DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Funcion";
	public static final String ORDER_BY_JPQL = " ORDER BY funcion.fechamodifica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Funcion.fechamodifica ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.Funcion"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.Funcion"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hitss.layer.model.Funcion"),
			true);
	public static long DESCRIPCION_COLUMN_BITMASK = 1L;
	public static long FECHAMODIFICA_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Funcion toModel(FuncionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Funcion model = new FuncionImpl();

		model.setFuncionId(soapModel.getFuncionId());
		model.setDescripcion(soapModel.getDescripcion());
		model.setEtiquetaId(soapModel.getEtiquetaId());
		model.setExigible(soapModel.getExigible());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechamodifica(soapModel.getFechamodifica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Funcion> toModels(FuncionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Funcion> models = new ArrayList<Funcion>(soapModels.length);

		for (FuncionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_REC_SOLICITUDREQUERIMIENTOFUNCION_NAME =
		"rec_SolicitudRequerimientoFuncion";
	public static final Object[][] MAPPING_TABLE_REC_SOLICITUDREQUERIMIENTOFUNCION_COLUMNS =
		{
			{ "funcionId", Types.BIGINT },
			{ "solicitudRequerimientoId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_REC_SOLICITUDREQUERIMIENTOFUNCION_SQL_CREATE =
		"create table rec_SolicitudRequerimientoFuncion (funcionId LONG not null,solicitudRequerimientoId LONG not null,primary key (funcionId, solicitudRequerimientoId))";
	public static final boolean FINDER_CACHE_ENABLED_REC_SOLICITUDREQUERIMIENTOFUNCION =
		GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.rec_SolicitudRequerimientoFuncion"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.Funcion"));

	public FuncionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _funcionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFuncionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _funcionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Funcion.class;
	}

	@Override
	public String getModelClassName() {
		return Funcion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("funcionId", getFuncionId());
		attributes.put("descripcion", getDescripcion());
		attributes.put("etiquetaId", getEtiquetaId());
		attributes.put("exigible", getExigible());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechamodifica", getFechamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long funcionId = (Long)attributes.get("funcionId");

		if (funcionId != null) {
			setFuncionId(funcionId);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Long etiquetaId = (Long)attributes.get("etiquetaId");

		if (etiquetaId != null) {
			setEtiquetaId(etiquetaId);
		}

		Boolean exigible = (Boolean)attributes.get("exigible");

		if (exigible != null) {
			setExigible(exigible);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechamodifica = (Date)attributes.get("fechamodifica");

		if (fechamodifica != null) {
			setFechamodifica(fechamodifica);
		}
	}

	@JSON
	@Override
	public long getFuncionId() {
		return _funcionId;
	}

	@Override
	public void setFuncionId(long funcionId) {
		_funcionId = funcionId;
	}

	@JSON
	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_columnBitmask |= DESCRIPCION_COLUMN_BITMASK;

		if (_originalDescripcion == null) {
			_originalDescripcion = _descripcion;
		}

		_descripcion = descripcion;
	}

	public String getOriginalDescripcion() {
		return GetterUtil.getString(_originalDescripcion);
	}

	@JSON
	@Override
	public long getEtiquetaId() {
		return _etiquetaId;
	}

	@Override
	public void setEtiquetaId(long etiquetaId) {
		_etiquetaId = etiquetaId;
	}

	@JSON
	@Override
	public boolean getExigible() {
		return _exigible;
	}

	@Override
	public boolean isExigible() {
		return _exigible;
	}

	@Override
	public void setExigible(boolean exigible) {
		_exigible = exigible;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechamodifica() {
		return _fechamodifica;
	}

	@Override
	public void setFechamodifica(Date fechamodifica) {
		_columnBitmask = -1L;

		_fechamodifica = fechamodifica;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Funcion.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Funcion toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Funcion)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FuncionImpl funcionImpl = new FuncionImpl();

		funcionImpl.setFuncionId(getFuncionId());
		funcionImpl.setDescripcion(getDescripcion());
		funcionImpl.setEtiquetaId(getEtiquetaId());
		funcionImpl.setExigible(getExigible());
		funcionImpl.setActivo(getActivo());
		funcionImpl.setUsuariocrea(getUsuariocrea());
		funcionImpl.setFechacrea(getFechacrea());
		funcionImpl.setUsuariomodifica(getUsuariomodifica());
		funcionImpl.setFechamodifica(getFechamodifica());

		funcionImpl.resetOriginalValues();

		return funcionImpl;
	}

	@Override
	public int compareTo(Funcion funcion) {
		int value = 0;

		value = DateUtil.compareTo(getFechamodifica(),
				funcion.getFechamodifica());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Funcion)) {
			return false;
		}

		Funcion funcion = (Funcion)obj;

		long primaryKey = funcion.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		FuncionModelImpl funcionModelImpl = this;

		funcionModelImpl._originalDescripcion = funcionModelImpl._descripcion;

		funcionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Funcion> toCacheModel() {
		FuncionCacheModel funcionCacheModel = new FuncionCacheModel();

		funcionCacheModel.funcionId = getFuncionId();

		funcionCacheModel.descripcion = getDescripcion();

		String descripcion = funcionCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			funcionCacheModel.descripcion = null;
		}

		funcionCacheModel.etiquetaId = getEtiquetaId();

		funcionCacheModel.exigible = getExigible();

		funcionCacheModel.activo = getActivo();

		funcionCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			funcionCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			funcionCacheModel.fechacrea = Long.MIN_VALUE;
		}

		funcionCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechamodifica = getFechamodifica();

		if (fechamodifica != null) {
			funcionCacheModel.fechamodifica = fechamodifica.getTime();
		}
		else {
			funcionCacheModel.fechamodifica = Long.MIN_VALUE;
		}

		return funcionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{funcionId=");
		sb.append(getFuncionId());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", etiquetaId=");
		sb.append(getEtiquetaId());
		sb.append(", exigible=");
		sb.append(getExigible());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechamodifica=");
		sb.append(getFechamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.Funcion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>funcionId</column-name><column-value><![CDATA[");
		sb.append(getFuncionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>etiquetaId</column-name><column-value><![CDATA[");
		sb.append(getEtiquetaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>exigible</column-name><column-value><![CDATA[");
		sb.append(getExigible());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Funcion.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Funcion.class
		};
	private long _funcionId;
	private String _descripcion;
	private String _originalDescripcion;
	private long _etiquetaId;
	private boolean _exigible;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechamodifica;
	private long _columnBitmask;
	private Funcion _escapedModel;
}