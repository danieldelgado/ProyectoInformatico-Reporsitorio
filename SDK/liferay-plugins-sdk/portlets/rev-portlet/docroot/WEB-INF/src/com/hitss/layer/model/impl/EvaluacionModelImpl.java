/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.Evaluacion;
import com.hitss.layer.model.EvaluacionModel;
import com.hitss.layer.model.EvaluacionSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Evaluacion service. Represents a row in the &quot;Evaluacion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.EvaluacionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EvaluacionImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see EvaluacionImpl
 * @see com.hitss.layer.model.Evaluacion
 * @see com.hitss.layer.model.EvaluacionModel
 * @generated
 */
@JSON(strict = true)
public class EvaluacionModelImpl extends BaseModelImpl<Evaluacion>
	implements EvaluacionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a evaluacion model instance should use the {@link com.hitss.layer.model.Evaluacion} interface instead.
	 */
	public static final String TABLE_NAME = "Evaluacion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "evaluacionId", Types.BIGINT },
			{ "enfoque", Types.BIGINT },
			{ "puestoCategoriaEvaluacion", Types.BIGINT },
			{ "tipoEvaluacion", Types.BIGINT },
			{ "descripcion", Types.VARCHAR },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Evaluacion (evaluacionId LONG not null primary key,enfoque LONG,puestoCategoriaEvaluacion LONG,tipoEvaluacion LONG,descripcion VARCHAR(75) null,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechamodifica DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Evaluacion";
	public static final String ORDER_BY_JPQL = " ORDER BY evaluacion.fechamodifica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Evaluacion.fechamodifica ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.Evaluacion"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.Evaluacion"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Evaluacion toModel(EvaluacionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Evaluacion model = new EvaluacionImpl();

		model.setEvaluacionId(soapModel.getEvaluacionId());
		model.setEnfoque(soapModel.getEnfoque());
		model.setPuestoCategoriaEvaluacion(soapModel.getPuestoCategoriaEvaluacion());
		model.setTipoEvaluacion(soapModel.getTipoEvaluacion());
		model.setDescripcion(soapModel.getDescripcion());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechamodifica(soapModel.getFechamodifica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Evaluacion> toModels(EvaluacionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Evaluacion> models = new ArrayList<Evaluacion>(soapModels.length);

		for (EvaluacionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_REC_FASEPOSTULACIONEVALUACION_NAME = "rec_FasePostulacionEvaluacion";
	public static final Object[][] MAPPING_TABLE_REC_FASEPOSTULACIONEVALUACION_COLUMNS =
		{
			{ "evaluacionId", Types.BIGINT },
			{ "fasePostulacionId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_REC_FASEPOSTULACIONEVALUACION_SQL_CREATE =
		"create table rec_FasePostulacionEvaluacion (evaluacionId LONG not null,fasePostulacionId LONG not null,primary key (evaluacionId, fasePostulacionId))";
	public static final boolean FINDER_CACHE_ENABLED_REC_FASEPOSTULACIONEVALUACION =
		GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.rec_FasePostulacionEvaluacion"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.Evaluacion"));

	public EvaluacionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _evaluacionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEvaluacionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _evaluacionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Evaluacion.class;
	}

	@Override
	public String getModelClassName() {
		return Evaluacion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("evaluacionId", getEvaluacionId());
		attributes.put("enfoque", getEnfoque());
		attributes.put("puestoCategoriaEvaluacion",
			getPuestoCategoriaEvaluacion());
		attributes.put("tipoEvaluacion", getTipoEvaluacion());
		attributes.put("descripcion", getDescripcion());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechamodifica", getFechamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long evaluacionId = (Long)attributes.get("evaluacionId");

		if (evaluacionId != null) {
			setEvaluacionId(evaluacionId);
		}

		Long enfoque = (Long)attributes.get("enfoque");

		if (enfoque != null) {
			setEnfoque(enfoque);
		}

		Long puestoCategoriaEvaluacion = (Long)attributes.get(
				"puestoCategoriaEvaluacion");

		if (puestoCategoriaEvaluacion != null) {
			setPuestoCategoriaEvaluacion(puestoCategoriaEvaluacion);
		}

		Long tipoEvaluacion = (Long)attributes.get("tipoEvaluacion");

		if (tipoEvaluacion != null) {
			setTipoEvaluacion(tipoEvaluacion);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechamodifica = (Date)attributes.get("fechamodifica");

		if (fechamodifica != null) {
			setFechamodifica(fechamodifica);
		}
	}

	@JSON
	@Override
	public long getEvaluacionId() {
		return _evaluacionId;
	}

	@Override
	public void setEvaluacionId(long evaluacionId) {
		_evaluacionId = evaluacionId;
	}

	@JSON
	@Override
	public long getEnfoque() {
		return _enfoque;
	}

	@Override
	public void setEnfoque(long enfoque) {
		_enfoque = enfoque;
	}

	@JSON
	@Override
	public long getPuestoCategoriaEvaluacion() {
		return _puestoCategoriaEvaluacion;
	}

	@Override
	public void setPuestoCategoriaEvaluacion(long puestoCategoriaEvaluacion) {
		_puestoCategoriaEvaluacion = puestoCategoriaEvaluacion;
	}

	@JSON
	@Override
	public long getTipoEvaluacion() {
		return _tipoEvaluacion;
	}

	@Override
	public void setTipoEvaluacion(long tipoEvaluacion) {
		_tipoEvaluacion = tipoEvaluacion;
	}

	@JSON
	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechamodifica() {
		return _fechamodifica;
	}

	@Override
	public void setFechamodifica(Date fechamodifica) {
		_fechamodifica = fechamodifica;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Evaluacion.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Evaluacion toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Evaluacion)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EvaluacionImpl evaluacionImpl = new EvaluacionImpl();

		evaluacionImpl.setEvaluacionId(getEvaluacionId());
		evaluacionImpl.setEnfoque(getEnfoque());
		evaluacionImpl.setPuestoCategoriaEvaluacion(getPuestoCategoriaEvaluacion());
		evaluacionImpl.setTipoEvaluacion(getTipoEvaluacion());
		evaluacionImpl.setDescripcion(getDescripcion());
		evaluacionImpl.setActivo(getActivo());
		evaluacionImpl.setUsuariocrea(getUsuariocrea());
		evaluacionImpl.setFechacrea(getFechacrea());
		evaluacionImpl.setUsuariomodifica(getUsuariomodifica());
		evaluacionImpl.setFechamodifica(getFechamodifica());

		evaluacionImpl.resetOriginalValues();

		return evaluacionImpl;
	}

	@Override
	public int compareTo(Evaluacion evaluacion) {
		int value = 0;

		value = DateUtil.compareTo(getFechamodifica(),
				evaluacion.getFechamodifica());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Evaluacion)) {
			return false;
		}

		Evaluacion evaluacion = (Evaluacion)obj;

		long primaryKey = evaluacion.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Evaluacion> toCacheModel() {
		EvaluacionCacheModel evaluacionCacheModel = new EvaluacionCacheModel();

		evaluacionCacheModel.evaluacionId = getEvaluacionId();

		evaluacionCacheModel.enfoque = getEnfoque();

		evaluacionCacheModel.puestoCategoriaEvaluacion = getPuestoCategoriaEvaluacion();

		evaluacionCacheModel.tipoEvaluacion = getTipoEvaluacion();

		evaluacionCacheModel.descripcion = getDescripcion();

		String descripcion = evaluacionCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			evaluacionCacheModel.descripcion = null;
		}

		evaluacionCacheModel.activo = getActivo();

		evaluacionCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			evaluacionCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			evaluacionCacheModel.fechacrea = Long.MIN_VALUE;
		}

		evaluacionCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechamodifica = getFechamodifica();

		if (fechamodifica != null) {
			evaluacionCacheModel.fechamodifica = fechamodifica.getTime();
		}
		else {
			evaluacionCacheModel.fechamodifica = Long.MIN_VALUE;
		}

		return evaluacionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{evaluacionId=");
		sb.append(getEvaluacionId());
		sb.append(", enfoque=");
		sb.append(getEnfoque());
		sb.append(", puestoCategoriaEvaluacion=");
		sb.append(getPuestoCategoriaEvaluacion());
		sb.append(", tipoEvaluacion=");
		sb.append(getTipoEvaluacion());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechamodifica=");
		sb.append(getFechamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.Evaluacion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>evaluacionId</column-name><column-value><![CDATA[");
		sb.append(getEvaluacionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enfoque</column-name><column-value><![CDATA[");
		sb.append(getEnfoque());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>puestoCategoriaEvaluacion</column-name><column-value><![CDATA[");
		sb.append(getPuestoCategoriaEvaluacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoEvaluacion</column-name><column-value><![CDATA[");
		sb.append(getTipoEvaluacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Evaluacion.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Evaluacion.class
		};
	private long _evaluacionId;
	private long _enfoque;
	private long _puestoCategoriaEvaluacion;
	private long _tipoEvaluacion;
	private String _descripcion;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechamodifica;
	private Evaluacion _escapedModel;
}