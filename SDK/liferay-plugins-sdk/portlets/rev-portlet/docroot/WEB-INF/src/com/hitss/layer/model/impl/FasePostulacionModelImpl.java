/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.FasePostulacion;
import com.hitss.layer.model.FasePostulacionModel;
import com.hitss.layer.model.FasePostulacionSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the FasePostulacion service. Represents a row in the &quot;FasePostulacion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.FasePostulacionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FasePostulacionImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see FasePostulacionImpl
 * @see com.hitss.layer.model.FasePostulacion
 * @see com.hitss.layer.model.FasePostulacionModel
 * @generated
 */
@JSON(strict = true)
public class FasePostulacionModelImpl extends BaseModelImpl<FasePostulacion>
	implements FasePostulacionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a fase postulacion model instance should use the {@link com.hitss.layer.model.FasePostulacion} interface instead.
	 */
	public static final String TABLE_NAME = "FasePostulacion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "fasePostulacionId", Types.BIGINT },
			{ "solicitudRequerimientoId", Types.BIGINT },
			{ "usuarioId", Types.BIGINT },
			{ "tipoFase", Types.BIGINT },
			{ "fechaFase", Types.TIMESTAMP },
			{ "descripcion", Types.VARCHAR },
			{ "estado", Types.BIGINT },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table FasePostulacion (fasePostulacionId LONG not null primary key,solicitudRequerimientoId LONG,usuarioId LONG,tipoFase LONG,fechaFase DATE null,descripcion VARCHAR(75) null,estado LONG,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechamodifica DATE null)";
	public static final String TABLE_SQL_DROP = "drop table FasePostulacion";
	public static final String ORDER_BY_JPQL = " ORDER BY fasePostulacion.fechamodifica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY FasePostulacion.fechamodifica ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.FasePostulacion"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.FasePostulacion"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hitss.layer.model.FasePostulacion"),
			true);
	public static long FASEPOSTULACIONID_COLUMN_BITMASK = 1L;
	public static long SOLICITUDREQUERIMIENTOID_COLUMN_BITMASK = 2L;
	public static long USUARIOID_COLUMN_BITMASK = 4L;
	public static long FECHAMODIFICA_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FasePostulacion toModel(FasePostulacionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		FasePostulacion model = new FasePostulacionImpl();

		model.setFasePostulacionId(soapModel.getFasePostulacionId());
		model.setSolicitudRequerimientoId(soapModel.getSolicitudRequerimientoId());
		model.setUsuarioId(soapModel.getUsuarioId());
		model.setTipoFase(soapModel.getTipoFase());
		model.setFechaFase(soapModel.getFechaFase());
		model.setDescripcion(soapModel.getDescripcion());
		model.setEstado(soapModel.getEstado());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechamodifica(soapModel.getFechamodifica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FasePostulacion> toModels(
		FasePostulacionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<FasePostulacion> models = new ArrayList<FasePostulacion>(soapModels.length);

		for (FasePostulacionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_REC_FASEPOSTULACIONEVALUACION_NAME = "rec_FasePostulacionEvaluacion";
	public static final Object[][] MAPPING_TABLE_REC_FASEPOSTULACIONEVALUACION_COLUMNS =
		{
			{ "evaluacionId", Types.BIGINT },
			{ "fasePostulacionId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_REC_FASEPOSTULACIONEVALUACION_SQL_CREATE =
		"create table rec_FasePostulacionEvaluacion (evaluacionId LONG not null,fasePostulacionId LONG not null,primary key (evaluacionId, fasePostulacionId))";
	public static final boolean FINDER_CACHE_ENABLED_REC_FASEPOSTULACIONEVALUACION =
		GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.rec_FasePostulacionEvaluacion"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.FasePostulacion"));

	public FasePostulacionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _fasePostulacionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFasePostulacionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _fasePostulacionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FasePostulacion.class;
	}

	@Override
	public String getModelClassName() {
		return FasePostulacion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("fasePostulacionId", getFasePostulacionId());
		attributes.put("solicitudRequerimientoId", getSolicitudRequerimientoId());
		attributes.put("usuarioId", getUsuarioId());
		attributes.put("tipoFase", getTipoFase());
		attributes.put("fechaFase", getFechaFase());
		attributes.put("descripcion", getDescripcion());
		attributes.put("estado", getEstado());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechamodifica", getFechamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long fasePostulacionId = (Long)attributes.get("fasePostulacionId");

		if (fasePostulacionId != null) {
			setFasePostulacionId(fasePostulacionId);
		}

		Long solicitudRequerimientoId = (Long)attributes.get(
				"solicitudRequerimientoId");

		if (solicitudRequerimientoId != null) {
			setSolicitudRequerimientoId(solicitudRequerimientoId);
		}

		Long usuarioId = (Long)attributes.get("usuarioId");

		if (usuarioId != null) {
			setUsuarioId(usuarioId);
		}

		Long tipoFase = (Long)attributes.get("tipoFase");

		if (tipoFase != null) {
			setTipoFase(tipoFase);
		}

		Date fechaFase = (Date)attributes.get("fechaFase");

		if (fechaFase != null) {
			setFechaFase(fechaFase);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Long estado = (Long)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechamodifica = (Date)attributes.get("fechamodifica");

		if (fechamodifica != null) {
			setFechamodifica(fechamodifica);
		}
	}

	@JSON
	@Override
	public long getFasePostulacionId() {
		return _fasePostulacionId;
	}

	@Override
	public void setFasePostulacionId(long fasePostulacionId) {
		_columnBitmask |= FASEPOSTULACIONID_COLUMN_BITMASK;

		if (!_setOriginalFasePostulacionId) {
			_setOriginalFasePostulacionId = true;

			_originalFasePostulacionId = _fasePostulacionId;
		}

		_fasePostulacionId = fasePostulacionId;
	}

	public long getOriginalFasePostulacionId() {
		return _originalFasePostulacionId;
	}

	@JSON
	@Override
	public long getSolicitudRequerimientoId() {
		return _solicitudRequerimientoId;
	}

	@Override
	public void setSolicitudRequerimientoId(long solicitudRequerimientoId) {
		_columnBitmask |= SOLICITUDREQUERIMIENTOID_COLUMN_BITMASK;

		if (!_setOriginalSolicitudRequerimientoId) {
			_setOriginalSolicitudRequerimientoId = true;

			_originalSolicitudRequerimientoId = _solicitudRequerimientoId;
		}

		_solicitudRequerimientoId = solicitudRequerimientoId;
	}

	public long getOriginalSolicitudRequerimientoId() {
		return _originalSolicitudRequerimientoId;
	}

	@JSON
	@Override
	public long getUsuarioId() {
		return _usuarioId;
	}

	@Override
	public void setUsuarioId(long usuarioId) {
		_columnBitmask |= USUARIOID_COLUMN_BITMASK;

		if (!_setOriginalUsuarioId) {
			_setOriginalUsuarioId = true;

			_originalUsuarioId = _usuarioId;
		}

		_usuarioId = usuarioId;
	}

	public long getOriginalUsuarioId() {
		return _originalUsuarioId;
	}

	@JSON
	@Override
	public long getTipoFase() {
		return _tipoFase;
	}

	@Override
	public void setTipoFase(long tipoFase) {
		_tipoFase = tipoFase;
	}

	@JSON
	@Override
	public Date getFechaFase() {
		return _fechaFase;
	}

	@Override
	public void setFechaFase(Date fechaFase) {
		_fechaFase = fechaFase;
	}

	@JSON
	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	@JSON
	@Override
	public long getEstado() {
		return _estado;
	}

	@Override
	public void setEstado(long estado) {
		_estado = estado;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechamodifica() {
		return _fechamodifica;
	}

	@Override
	public void setFechamodifica(Date fechamodifica) {
		_columnBitmask = -1L;

		_fechamodifica = fechamodifica;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			FasePostulacion.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FasePostulacion toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FasePostulacion)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FasePostulacionImpl fasePostulacionImpl = new FasePostulacionImpl();

		fasePostulacionImpl.setFasePostulacionId(getFasePostulacionId());
		fasePostulacionImpl.setSolicitudRequerimientoId(getSolicitudRequerimientoId());
		fasePostulacionImpl.setUsuarioId(getUsuarioId());
		fasePostulacionImpl.setTipoFase(getTipoFase());
		fasePostulacionImpl.setFechaFase(getFechaFase());
		fasePostulacionImpl.setDescripcion(getDescripcion());
		fasePostulacionImpl.setEstado(getEstado());
		fasePostulacionImpl.setActivo(getActivo());
		fasePostulacionImpl.setUsuariocrea(getUsuariocrea());
		fasePostulacionImpl.setFechacrea(getFechacrea());
		fasePostulacionImpl.setUsuariomodifica(getUsuariomodifica());
		fasePostulacionImpl.setFechamodifica(getFechamodifica());

		fasePostulacionImpl.resetOriginalValues();

		return fasePostulacionImpl;
	}

	@Override
	public int compareTo(FasePostulacion fasePostulacion) {
		int value = 0;

		value = DateUtil.compareTo(getFechamodifica(),
				fasePostulacion.getFechamodifica());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FasePostulacion)) {
			return false;
		}

		FasePostulacion fasePostulacion = (FasePostulacion)obj;

		long primaryKey = fasePostulacion.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		FasePostulacionModelImpl fasePostulacionModelImpl = this;

		fasePostulacionModelImpl._originalFasePostulacionId = fasePostulacionModelImpl._fasePostulacionId;

		fasePostulacionModelImpl._setOriginalFasePostulacionId = false;

		fasePostulacionModelImpl._originalSolicitudRequerimientoId = fasePostulacionModelImpl._solicitudRequerimientoId;

		fasePostulacionModelImpl._setOriginalSolicitudRequerimientoId = false;

		fasePostulacionModelImpl._originalUsuarioId = fasePostulacionModelImpl._usuarioId;

		fasePostulacionModelImpl._setOriginalUsuarioId = false;

		fasePostulacionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FasePostulacion> toCacheModel() {
		FasePostulacionCacheModel fasePostulacionCacheModel = new FasePostulacionCacheModel();

		fasePostulacionCacheModel.fasePostulacionId = getFasePostulacionId();

		fasePostulacionCacheModel.solicitudRequerimientoId = getSolicitudRequerimientoId();

		fasePostulacionCacheModel.usuarioId = getUsuarioId();

		fasePostulacionCacheModel.tipoFase = getTipoFase();

		Date fechaFase = getFechaFase();

		if (fechaFase != null) {
			fasePostulacionCacheModel.fechaFase = fechaFase.getTime();
		}
		else {
			fasePostulacionCacheModel.fechaFase = Long.MIN_VALUE;
		}

		fasePostulacionCacheModel.descripcion = getDescripcion();

		String descripcion = fasePostulacionCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			fasePostulacionCacheModel.descripcion = null;
		}

		fasePostulacionCacheModel.estado = getEstado();

		fasePostulacionCacheModel.activo = getActivo();

		fasePostulacionCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			fasePostulacionCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			fasePostulacionCacheModel.fechacrea = Long.MIN_VALUE;
		}

		fasePostulacionCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechamodifica = getFechamodifica();

		if (fechamodifica != null) {
			fasePostulacionCacheModel.fechamodifica = fechamodifica.getTime();
		}
		else {
			fasePostulacionCacheModel.fechamodifica = Long.MIN_VALUE;
		}

		return fasePostulacionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{fasePostulacionId=");
		sb.append(getFasePostulacionId());
		sb.append(", solicitudRequerimientoId=");
		sb.append(getSolicitudRequerimientoId());
		sb.append(", usuarioId=");
		sb.append(getUsuarioId());
		sb.append(", tipoFase=");
		sb.append(getTipoFase());
		sb.append(", fechaFase=");
		sb.append(getFechaFase());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechamodifica=");
		sb.append(getFechamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.FasePostulacion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>fasePostulacionId</column-name><column-value><![CDATA[");
		sb.append(getFasePostulacionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>solicitudRequerimientoId</column-name><column-value><![CDATA[");
		sb.append(getSolicitudRequerimientoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoFase</column-name><column-value><![CDATA[");
		sb.append(getTipoFase());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaFase</column-name><column-value><![CDATA[");
		sb.append(getFechaFase());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = FasePostulacion.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			FasePostulacion.class
		};
	private long _fasePostulacionId;
	private long _originalFasePostulacionId;
	private boolean _setOriginalFasePostulacionId;
	private long _solicitudRequerimientoId;
	private long _originalSolicitudRequerimientoId;
	private boolean _setOriginalSolicitudRequerimientoId;
	private long _usuarioId;
	private long _originalUsuarioId;
	private boolean _setOriginalUsuarioId;
	private long _tipoFase;
	private Date _fechaFase;
	private String _descripcion;
	private long _estado;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechamodifica;
	private long _columnBitmask;
	private FasePostulacion _escapedModel;
}