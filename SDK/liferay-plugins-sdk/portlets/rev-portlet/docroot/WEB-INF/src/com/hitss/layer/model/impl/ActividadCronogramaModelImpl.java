/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.ActividadCronograma;
import com.hitss.layer.model.ActividadCronogramaModel;
import com.hitss.layer.model.ActividadCronogramaSoap;
import com.hitss.layer.service.persistence.ActividadCronogramaPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ActividadCronograma service. Represents a row in the &quot;ActividadCronograma&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.ActividadCronogramaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActividadCronogramaImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see ActividadCronogramaImpl
 * @see com.hitss.layer.model.ActividadCronograma
 * @see com.hitss.layer.model.ActividadCronogramaModel
 * @generated
 */
@JSON(strict = true)
public class ActividadCronogramaModelImpl extends BaseModelImpl<ActividadCronograma>
	implements ActividadCronogramaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a actividad cronograma model instance should use the {@link com.hitss.layer.model.ActividadCronograma} interface instead.
	 */
	public static final String TABLE_NAME = "ActividadCronograma";
	public static final Object[][] TABLE_COLUMNS = {
			{ "cronogramaId", Types.BIGINT },
			{ "actividadCronogramaId", Types.BIGINT },
			{ "descripcion", Types.VARCHAR },
			{ "fechaInicio", Types.TIMESTAMP },
			{ "fechaFin", Types.TIMESTAMP },
			{ "cumplidoEvaluacion", Types.BOOLEAN },
			{ "estado", Types.BIGINT },
			{ "fechaInicioEvaluacion", Types.TIMESTAMP },
			{ "fechaFinEvaluacion", Types.TIMESTAMP },
			{ "grupoUsuario", Types.BIGINT },
			{ "tipoActividad", Types.BIGINT },
			{ "aprobadoColaborador", Types.BIGINT },
			{ "jerarquiaEvaluar", Types.BIGINT },
			{ "aprobadoLider", Types.BIGINT },
			{ "usuarioGerenteId", Types.BIGINT },
			{ "usuarioLiderId", Types.BIGINT },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table ActividadCronograma (cronogramaId LONG not null,actividadCronogramaId LONG not null,descripcion VARCHAR(75) null,fechaInicio DATE null,fechaFin DATE null,cumplidoEvaluacion BOOLEAN,estado LONG,fechaInicioEvaluacion DATE null,fechaFinEvaluacion DATE null,grupoUsuario LONG,tipoActividad LONG,aprobadoColaborador LONG,jerarquiaEvaluar LONG,aprobadoLider LONG,usuarioGerenteId LONG,usuarioLiderId LONG,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechamodifica DATE null,primary key (cronogramaId, actividadCronogramaId))";
	public static final String TABLE_SQL_DROP = "drop table ActividadCronograma";
	public static final String ORDER_BY_JPQL = " ORDER BY actividadCronograma.fechamodifica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ActividadCronograma.fechamodifica ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.ActividadCronograma"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.ActividadCronograma"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ActividadCronograma toModel(ActividadCronogramaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ActividadCronograma model = new ActividadCronogramaImpl();

		model.setCronogramaId(soapModel.getCronogramaId());
		model.setActividadCronogramaId(soapModel.getActividadCronogramaId());
		model.setDescripcion(soapModel.getDescripcion());
		model.setFechaInicio(soapModel.getFechaInicio());
		model.setFechaFin(soapModel.getFechaFin());
		model.setCumplidoEvaluacion(soapModel.getCumplidoEvaluacion());
		model.setEstado(soapModel.getEstado());
		model.setFechaInicioEvaluacion(soapModel.getFechaInicioEvaluacion());
		model.setFechaFinEvaluacion(soapModel.getFechaFinEvaluacion());
		model.setGrupoUsuario(soapModel.getGrupoUsuario());
		model.setTipoActividad(soapModel.getTipoActividad());
		model.setAprobadoColaborador(soapModel.getAprobadoColaborador());
		model.setJerarquiaEvaluar(soapModel.getJerarquiaEvaluar());
		model.setAprobadoLider(soapModel.getAprobadoLider());
		model.setUsuarioGerenteId(soapModel.getUsuarioGerenteId());
		model.setUsuarioLiderId(soapModel.getUsuarioLiderId());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechamodifica(soapModel.getFechamodifica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ActividadCronograma> toModels(
		ActividadCronogramaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ActividadCronograma> models = new ArrayList<ActividadCronograma>(soapModels.length);

		for (ActividadCronogramaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.ActividadCronograma"));

	public ActividadCronogramaModelImpl() {
	}

	@Override
	public ActividadCronogramaPK getPrimaryKey() {
		return new ActividadCronogramaPK(_cronogramaId, _actividadCronogramaId);
	}

	@Override
	public void setPrimaryKey(ActividadCronogramaPK primaryKey) {
		setCronogramaId(primaryKey.cronogramaId);
		setActividadCronogramaId(primaryKey.actividadCronogramaId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ActividadCronogramaPK(_cronogramaId, _actividadCronogramaId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ActividadCronogramaPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ActividadCronograma.class;
	}

	@Override
	public String getModelClassName() {
		return ActividadCronograma.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("cronogramaId", getCronogramaId());
		attributes.put("actividadCronogramaId", getActividadCronogramaId());
		attributes.put("descripcion", getDescripcion());
		attributes.put("fechaInicio", getFechaInicio());
		attributes.put("fechaFin", getFechaFin());
		attributes.put("cumplidoEvaluacion", getCumplidoEvaluacion());
		attributes.put("estado", getEstado());
		attributes.put("fechaInicioEvaluacion", getFechaInicioEvaluacion());
		attributes.put("fechaFinEvaluacion", getFechaFinEvaluacion());
		attributes.put("grupoUsuario", getGrupoUsuario());
		attributes.put("tipoActividad", getTipoActividad());
		attributes.put("aprobadoColaborador", getAprobadoColaborador());
		attributes.put("jerarquiaEvaluar", getJerarquiaEvaluar());
		attributes.put("aprobadoLider", getAprobadoLider());
		attributes.put("usuarioGerenteId", getUsuarioGerenteId());
		attributes.put("usuarioLiderId", getUsuarioLiderId());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechamodifica", getFechamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long cronogramaId = (Long)attributes.get("cronogramaId");

		if (cronogramaId != null) {
			setCronogramaId(cronogramaId);
		}

		Long actividadCronogramaId = (Long)attributes.get(
				"actividadCronogramaId");

		if (actividadCronogramaId != null) {
			setActividadCronogramaId(actividadCronogramaId);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Date fechaInicio = (Date)attributes.get("fechaInicio");

		if (fechaInicio != null) {
			setFechaInicio(fechaInicio);
		}

		Date fechaFin = (Date)attributes.get("fechaFin");

		if (fechaFin != null) {
			setFechaFin(fechaFin);
		}

		Boolean cumplidoEvaluacion = (Boolean)attributes.get(
				"cumplidoEvaluacion");

		if (cumplidoEvaluacion != null) {
			setCumplidoEvaluacion(cumplidoEvaluacion);
		}

		Long estado = (Long)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}

		Date fechaInicioEvaluacion = (Date)attributes.get(
				"fechaInicioEvaluacion");

		if (fechaInicioEvaluacion != null) {
			setFechaInicioEvaluacion(fechaInicioEvaluacion);
		}

		Date fechaFinEvaluacion = (Date)attributes.get("fechaFinEvaluacion");

		if (fechaFinEvaluacion != null) {
			setFechaFinEvaluacion(fechaFinEvaluacion);
		}

		Long grupoUsuario = (Long)attributes.get("grupoUsuario");

		if (grupoUsuario != null) {
			setGrupoUsuario(grupoUsuario);
		}

		Long tipoActividad = (Long)attributes.get("tipoActividad");

		if (tipoActividad != null) {
			setTipoActividad(tipoActividad);
		}

		Long aprobadoColaborador = (Long)attributes.get("aprobadoColaborador");

		if (aprobadoColaborador != null) {
			setAprobadoColaborador(aprobadoColaborador);
		}

		Long jerarquiaEvaluar = (Long)attributes.get("jerarquiaEvaluar");

		if (jerarquiaEvaluar != null) {
			setJerarquiaEvaluar(jerarquiaEvaluar);
		}

		Long aprobadoLider = (Long)attributes.get("aprobadoLider");

		if (aprobadoLider != null) {
			setAprobadoLider(aprobadoLider);
		}

		Long usuarioGerenteId = (Long)attributes.get("usuarioGerenteId");

		if (usuarioGerenteId != null) {
			setUsuarioGerenteId(usuarioGerenteId);
		}

		Long usuarioLiderId = (Long)attributes.get("usuarioLiderId");

		if (usuarioLiderId != null) {
			setUsuarioLiderId(usuarioLiderId);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechamodifica = (Date)attributes.get("fechamodifica");

		if (fechamodifica != null) {
			setFechamodifica(fechamodifica);
		}
	}

	@JSON
	@Override
	public long getCronogramaId() {
		return _cronogramaId;
	}

	@Override
	public void setCronogramaId(long cronogramaId) {
		_cronogramaId = cronogramaId;
	}

	@JSON
	@Override
	public long getActividadCronogramaId() {
		return _actividadCronogramaId;
	}

	@Override
	public void setActividadCronogramaId(long actividadCronogramaId) {
		_actividadCronogramaId = actividadCronogramaId;
	}

	@JSON
	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	@JSON
	@Override
	public Date getFechaInicio() {
		return _fechaInicio;
	}

	@Override
	public void setFechaInicio(Date fechaInicio) {
		_fechaInicio = fechaInicio;
	}

	@JSON
	@Override
	public Date getFechaFin() {
		return _fechaFin;
	}

	@Override
	public void setFechaFin(Date fechaFin) {
		_fechaFin = fechaFin;
	}

	@JSON
	@Override
	public boolean getCumplidoEvaluacion() {
		return _cumplidoEvaluacion;
	}

	@Override
	public boolean isCumplidoEvaluacion() {
		return _cumplidoEvaluacion;
	}

	@Override
	public void setCumplidoEvaluacion(boolean cumplidoEvaluacion) {
		_cumplidoEvaluacion = cumplidoEvaluacion;
	}

	@JSON
	@Override
	public long getEstado() {
		return _estado;
	}

	@Override
	public void setEstado(long estado) {
		_estado = estado;
	}

	@JSON
	@Override
	public Date getFechaInicioEvaluacion() {
		return _fechaInicioEvaluacion;
	}

	@Override
	public void setFechaInicioEvaluacion(Date fechaInicioEvaluacion) {
		_fechaInicioEvaluacion = fechaInicioEvaluacion;
	}

	@JSON
	@Override
	public Date getFechaFinEvaluacion() {
		return _fechaFinEvaluacion;
	}

	@Override
	public void setFechaFinEvaluacion(Date fechaFinEvaluacion) {
		_fechaFinEvaluacion = fechaFinEvaluacion;
	}

	@JSON
	@Override
	public long getGrupoUsuario() {
		return _grupoUsuario;
	}

	@Override
	public void setGrupoUsuario(long grupoUsuario) {
		_grupoUsuario = grupoUsuario;
	}

	@JSON
	@Override
	public long getTipoActividad() {
		return _tipoActividad;
	}

	@Override
	public void setTipoActividad(long tipoActividad) {
		_tipoActividad = tipoActividad;
	}

	@JSON
	@Override
	public long getAprobadoColaborador() {
		return _aprobadoColaborador;
	}

	@Override
	public void setAprobadoColaborador(long aprobadoColaborador) {
		_aprobadoColaborador = aprobadoColaborador;
	}

	@JSON
	@Override
	public long getJerarquiaEvaluar() {
		return _jerarquiaEvaluar;
	}

	@Override
	public void setJerarquiaEvaluar(long jerarquiaEvaluar) {
		_jerarquiaEvaluar = jerarquiaEvaluar;
	}

	@JSON
	@Override
	public long getAprobadoLider() {
		return _aprobadoLider;
	}

	@Override
	public void setAprobadoLider(long aprobadoLider) {
		_aprobadoLider = aprobadoLider;
	}

	@JSON
	@Override
	public long getUsuarioGerenteId() {
		return _usuarioGerenteId;
	}

	@Override
	public void setUsuarioGerenteId(long usuarioGerenteId) {
		_usuarioGerenteId = usuarioGerenteId;
	}

	@JSON
	@Override
	public long getUsuarioLiderId() {
		return _usuarioLiderId;
	}

	@Override
	public void setUsuarioLiderId(long usuarioLiderId) {
		_usuarioLiderId = usuarioLiderId;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechamodifica() {
		return _fechamodifica;
	}

	@Override
	public void setFechamodifica(Date fechamodifica) {
		_fechamodifica = fechamodifica;
	}

	@Override
	public ActividadCronograma toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ActividadCronograma)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActividadCronogramaImpl actividadCronogramaImpl = new ActividadCronogramaImpl();

		actividadCronogramaImpl.setCronogramaId(getCronogramaId());
		actividadCronogramaImpl.setActividadCronogramaId(getActividadCronogramaId());
		actividadCronogramaImpl.setDescripcion(getDescripcion());
		actividadCronogramaImpl.setFechaInicio(getFechaInicio());
		actividadCronogramaImpl.setFechaFin(getFechaFin());
		actividadCronogramaImpl.setCumplidoEvaluacion(getCumplidoEvaluacion());
		actividadCronogramaImpl.setEstado(getEstado());
		actividadCronogramaImpl.setFechaInicioEvaluacion(getFechaInicioEvaluacion());
		actividadCronogramaImpl.setFechaFinEvaluacion(getFechaFinEvaluacion());
		actividadCronogramaImpl.setGrupoUsuario(getGrupoUsuario());
		actividadCronogramaImpl.setTipoActividad(getTipoActividad());
		actividadCronogramaImpl.setAprobadoColaborador(getAprobadoColaborador());
		actividadCronogramaImpl.setJerarquiaEvaluar(getJerarquiaEvaluar());
		actividadCronogramaImpl.setAprobadoLider(getAprobadoLider());
		actividadCronogramaImpl.setUsuarioGerenteId(getUsuarioGerenteId());
		actividadCronogramaImpl.setUsuarioLiderId(getUsuarioLiderId());
		actividadCronogramaImpl.setActivo(getActivo());
		actividadCronogramaImpl.setUsuariocrea(getUsuariocrea());
		actividadCronogramaImpl.setFechacrea(getFechacrea());
		actividadCronogramaImpl.setUsuariomodifica(getUsuariomodifica());
		actividadCronogramaImpl.setFechamodifica(getFechamodifica());

		actividadCronogramaImpl.resetOriginalValues();

		return actividadCronogramaImpl;
	}

	@Override
	public int compareTo(ActividadCronograma actividadCronograma) {
		int value = 0;

		value = DateUtil.compareTo(getFechamodifica(),
				actividadCronograma.getFechamodifica());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ActividadCronograma)) {
			return false;
		}

		ActividadCronograma actividadCronograma = (ActividadCronograma)obj;

		ActividadCronogramaPK primaryKey = actividadCronograma.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ActividadCronograma> toCacheModel() {
		ActividadCronogramaCacheModel actividadCronogramaCacheModel = new ActividadCronogramaCacheModel();

		actividadCronogramaCacheModel.cronogramaId = getCronogramaId();

		actividadCronogramaCacheModel.actividadCronogramaId = getActividadCronogramaId();

		actividadCronogramaCacheModel.descripcion = getDescripcion();

		String descripcion = actividadCronogramaCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			actividadCronogramaCacheModel.descripcion = null;
		}

		Date fechaInicio = getFechaInicio();

		if (fechaInicio != null) {
			actividadCronogramaCacheModel.fechaInicio = fechaInicio.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechaInicio = Long.MIN_VALUE;
		}

		Date fechaFin = getFechaFin();

		if (fechaFin != null) {
			actividadCronogramaCacheModel.fechaFin = fechaFin.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechaFin = Long.MIN_VALUE;
		}

		actividadCronogramaCacheModel.cumplidoEvaluacion = getCumplidoEvaluacion();

		actividadCronogramaCacheModel.estado = getEstado();

		Date fechaInicioEvaluacion = getFechaInicioEvaluacion();

		if (fechaInicioEvaluacion != null) {
			actividadCronogramaCacheModel.fechaInicioEvaluacion = fechaInicioEvaluacion.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechaInicioEvaluacion = Long.MIN_VALUE;
		}

		Date fechaFinEvaluacion = getFechaFinEvaluacion();

		if (fechaFinEvaluacion != null) {
			actividadCronogramaCacheModel.fechaFinEvaluacion = fechaFinEvaluacion.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechaFinEvaluacion = Long.MIN_VALUE;
		}

		actividadCronogramaCacheModel.grupoUsuario = getGrupoUsuario();

		actividadCronogramaCacheModel.tipoActividad = getTipoActividad();

		actividadCronogramaCacheModel.aprobadoColaborador = getAprobadoColaborador();

		actividadCronogramaCacheModel.jerarquiaEvaluar = getJerarquiaEvaluar();

		actividadCronogramaCacheModel.aprobadoLider = getAprobadoLider();

		actividadCronogramaCacheModel.usuarioGerenteId = getUsuarioGerenteId();

		actividadCronogramaCacheModel.usuarioLiderId = getUsuarioLiderId();

		actividadCronogramaCacheModel.activo = getActivo();

		actividadCronogramaCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			actividadCronogramaCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechacrea = Long.MIN_VALUE;
		}

		actividadCronogramaCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechamodifica = getFechamodifica();

		if (fechamodifica != null) {
			actividadCronogramaCacheModel.fechamodifica = fechamodifica.getTime();
		}
		else {
			actividadCronogramaCacheModel.fechamodifica = Long.MIN_VALUE;
		}

		return actividadCronogramaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(43);

		sb.append("{cronogramaId=");
		sb.append(getCronogramaId());
		sb.append(", actividadCronogramaId=");
		sb.append(getActividadCronogramaId());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", fechaInicio=");
		sb.append(getFechaInicio());
		sb.append(", fechaFin=");
		sb.append(getFechaFin());
		sb.append(", cumplidoEvaluacion=");
		sb.append(getCumplidoEvaluacion());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append(", fechaInicioEvaluacion=");
		sb.append(getFechaInicioEvaluacion());
		sb.append(", fechaFinEvaluacion=");
		sb.append(getFechaFinEvaluacion());
		sb.append(", grupoUsuario=");
		sb.append(getGrupoUsuario());
		sb.append(", tipoActividad=");
		sb.append(getTipoActividad());
		sb.append(", aprobadoColaborador=");
		sb.append(getAprobadoColaborador());
		sb.append(", jerarquiaEvaluar=");
		sb.append(getJerarquiaEvaluar());
		sb.append(", aprobadoLider=");
		sb.append(getAprobadoLider());
		sb.append(", usuarioGerenteId=");
		sb.append(getUsuarioGerenteId());
		sb.append(", usuarioLiderId=");
		sb.append(getUsuarioLiderId());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechamodifica=");
		sb.append(getFechamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(67);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.ActividadCronograma");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>cronogramaId</column-name><column-value><![CDATA[");
		sb.append(getCronogramaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actividadCronogramaId</column-name><column-value><![CDATA[");
		sb.append(getActividadCronogramaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaInicio</column-name><column-value><![CDATA[");
		sb.append(getFechaInicio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaFin</column-name><column-value><![CDATA[");
		sb.append(getFechaFin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cumplidoEvaluacion</column-name><column-value><![CDATA[");
		sb.append(getCumplidoEvaluacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaInicioEvaluacion</column-name><column-value><![CDATA[");
		sb.append(getFechaInicioEvaluacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaFinEvaluacion</column-name><column-value><![CDATA[");
		sb.append(getFechaFinEvaluacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>grupoUsuario</column-name><column-value><![CDATA[");
		sb.append(getGrupoUsuario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoActividad</column-name><column-value><![CDATA[");
		sb.append(getTipoActividad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>aprobadoColaborador</column-name><column-value><![CDATA[");
		sb.append(getAprobadoColaborador());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jerarquiaEvaluar</column-name><column-value><![CDATA[");
		sb.append(getJerarquiaEvaluar());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>aprobadoLider</column-name><column-value><![CDATA[");
		sb.append(getAprobadoLider());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioGerenteId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioGerenteId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioLiderId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioLiderId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActividadCronograma.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ActividadCronograma.class
		};
	private long _cronogramaId;
	private long _actividadCronogramaId;
	private String _descripcion;
	private Date _fechaInicio;
	private Date _fechaFin;
	private boolean _cumplidoEvaluacion;
	private long _estado;
	private Date _fechaInicioEvaluacion;
	private Date _fechaFinEvaluacion;
	private long _grupoUsuario;
	private long _tipoActividad;
	private long _aprobadoColaborador;
	private long _jerarquiaEvaluar;
	private long _aprobadoLider;
	private long _usuarioGerenteId;
	private long _usuarioLiderId;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechamodifica;
	private ActividadCronograma _escapedModel;
}