/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model.impl;

import com.hitss.layer.model.ActividadPlan;
import com.hitss.layer.model.ActividadPlanModel;
import com.hitss.layer.model.ActividadPlanSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ActividadPlan service. Represents a row in the &quot;ActividadPlan&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hitss.layer.model.ActividadPlanModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActividadPlanImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see ActividadPlanImpl
 * @see com.hitss.layer.model.ActividadPlan
 * @see com.hitss.layer.model.ActividadPlanModel
 * @generated
 */
@JSON(strict = true)
public class ActividadPlanModelImpl extends BaseModelImpl<ActividadPlan>
	implements ActividadPlanModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a actividad plan model instance should use the {@link com.hitss.layer.model.ActividadPlan} interface instead.
	 */
	public static final String TABLE_NAME = "ActividadPlan";
	public static final Object[][] TABLE_COLUMNS = {
			{ "actividadPlanId", Types.BIGINT },
			{ "planAccionId", Types.BIGINT },
			{ "responsable", Types.BIGINT },
			{ "actividad", Types.VARCHAR },
			{ "evidencia", Types.VARCHAR },
			{ "objetivo", Types.VARCHAR },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table ActividadPlan (actividadPlanId LONG not null primary key,planAccionId LONG,responsable LONG,actividad VARCHAR(75) null,evidencia VARCHAR(75) null,objetivo VARCHAR(75) null,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechamodifica DATE null)";
	public static final String TABLE_SQL_DROP = "drop table ActividadPlan";
	public static final String ORDER_BY_JPQL = " ORDER BY actividadPlan.fechamodifica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ActividadPlan.fechamodifica ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hitss.layer.model.ActividadPlan"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hitss.layer.model.ActividadPlan"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ActividadPlan toModel(ActividadPlanSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ActividadPlan model = new ActividadPlanImpl();

		model.setActividadPlanId(soapModel.getActividadPlanId());
		model.setPlanAccionId(soapModel.getPlanAccionId());
		model.setResponsable(soapModel.getResponsable());
		model.setActividad(soapModel.getActividad());
		model.setEvidencia(soapModel.getEvidencia());
		model.setObjetivo(soapModel.getObjetivo());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechamodifica(soapModel.getFechamodifica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ActividadPlan> toModels(ActividadPlanSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ActividadPlan> models = new ArrayList<ActividadPlan>(soapModels.length);

		for (ActividadPlanSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_REC_ACTIVIDADPLANUSUARIO_NAME = "rec_ActividadPlanUsuario";
	public static final Object[][] MAPPING_TABLE_REC_ACTIVIDADPLANUSUARIO_COLUMNS =
		{
			{ "actividadPlanId", Types.BIGINT },
			{ "userId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_REC_ACTIVIDADPLANUSUARIO_SQL_CREATE =
		"create table rec_ActividadPlanUsuario (actividadPlanId LONG not null,userId LONG not null,primary key (actividadPlanId, userId))";
	public static final boolean FINDER_CACHE_ENABLED_REC_ACTIVIDADPLANUSUARIO = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.rec_ActividadPlanUsuario"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hitss.layer.model.ActividadPlan"));

	public ActividadPlanModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _actividadPlanId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setActividadPlanId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _actividadPlanId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ActividadPlan.class;
	}

	@Override
	public String getModelClassName() {
		return ActividadPlan.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("actividadPlanId", getActividadPlanId());
		attributes.put("planAccionId", getPlanAccionId());
		attributes.put("responsable", getResponsable());
		attributes.put("actividad", getActividad());
		attributes.put("evidencia", getEvidencia());
		attributes.put("objetivo", getObjetivo());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechamodifica", getFechamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long actividadPlanId = (Long)attributes.get("actividadPlanId");

		if (actividadPlanId != null) {
			setActividadPlanId(actividadPlanId);
		}

		Long planAccionId = (Long)attributes.get("planAccionId");

		if (planAccionId != null) {
			setPlanAccionId(planAccionId);
		}

		Long responsable = (Long)attributes.get("responsable");

		if (responsable != null) {
			setResponsable(responsable);
		}

		String actividad = (String)attributes.get("actividad");

		if (actividad != null) {
			setActividad(actividad);
		}

		String evidencia = (String)attributes.get("evidencia");

		if (evidencia != null) {
			setEvidencia(evidencia);
		}

		String objetivo = (String)attributes.get("objetivo");

		if (objetivo != null) {
			setObjetivo(objetivo);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechamodifica = (Date)attributes.get("fechamodifica");

		if (fechamodifica != null) {
			setFechamodifica(fechamodifica);
		}
	}

	@JSON
	@Override
	public long getActividadPlanId() {
		return _actividadPlanId;
	}

	@Override
	public void setActividadPlanId(long actividadPlanId) {
		_actividadPlanId = actividadPlanId;
	}

	@JSON
	@Override
	public long getPlanAccionId() {
		return _planAccionId;
	}

	@Override
	public void setPlanAccionId(long planAccionId) {
		_planAccionId = planAccionId;
	}

	@JSON
	@Override
	public long getResponsable() {
		return _responsable;
	}

	@Override
	public void setResponsable(long responsable) {
		_responsable = responsable;
	}

	@JSON
	@Override
	public String getActividad() {
		if (_actividad == null) {
			return StringPool.BLANK;
		}
		else {
			return _actividad;
		}
	}

	@Override
	public void setActividad(String actividad) {
		_actividad = actividad;
	}

	@JSON
	@Override
	public String getEvidencia() {
		if (_evidencia == null) {
			return StringPool.BLANK;
		}
		else {
			return _evidencia;
		}
	}

	@Override
	public void setEvidencia(String evidencia) {
		_evidencia = evidencia;
	}

	@JSON
	@Override
	public String getObjetivo() {
		if (_objetivo == null) {
			return StringPool.BLANK;
		}
		else {
			return _objetivo;
		}
	}

	@Override
	public void setObjetivo(String objetivo) {
		_objetivo = objetivo;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechamodifica() {
		return _fechamodifica;
	}

	@Override
	public void setFechamodifica(Date fechamodifica) {
		_fechamodifica = fechamodifica;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ActividadPlan.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ActividadPlan toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ActividadPlan)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActividadPlanImpl actividadPlanImpl = new ActividadPlanImpl();

		actividadPlanImpl.setActividadPlanId(getActividadPlanId());
		actividadPlanImpl.setPlanAccionId(getPlanAccionId());
		actividadPlanImpl.setResponsable(getResponsable());
		actividadPlanImpl.setActividad(getActividad());
		actividadPlanImpl.setEvidencia(getEvidencia());
		actividadPlanImpl.setObjetivo(getObjetivo());
		actividadPlanImpl.setActivo(getActivo());
		actividadPlanImpl.setUsuariocrea(getUsuariocrea());
		actividadPlanImpl.setFechacrea(getFechacrea());
		actividadPlanImpl.setUsuariomodifica(getUsuariomodifica());
		actividadPlanImpl.setFechamodifica(getFechamodifica());

		actividadPlanImpl.resetOriginalValues();

		return actividadPlanImpl;
	}

	@Override
	public int compareTo(ActividadPlan actividadPlan) {
		int value = 0;

		value = DateUtil.compareTo(getFechamodifica(),
				actividadPlan.getFechamodifica());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ActividadPlan)) {
			return false;
		}

		ActividadPlan actividadPlan = (ActividadPlan)obj;

		long primaryKey = actividadPlan.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ActividadPlan> toCacheModel() {
		ActividadPlanCacheModel actividadPlanCacheModel = new ActividadPlanCacheModel();

		actividadPlanCacheModel.actividadPlanId = getActividadPlanId();

		actividadPlanCacheModel.planAccionId = getPlanAccionId();

		actividadPlanCacheModel.responsable = getResponsable();

		actividadPlanCacheModel.actividad = getActividad();

		String actividad = actividadPlanCacheModel.actividad;

		if ((actividad != null) && (actividad.length() == 0)) {
			actividadPlanCacheModel.actividad = null;
		}

		actividadPlanCacheModel.evidencia = getEvidencia();

		String evidencia = actividadPlanCacheModel.evidencia;

		if ((evidencia != null) && (evidencia.length() == 0)) {
			actividadPlanCacheModel.evidencia = null;
		}

		actividadPlanCacheModel.objetivo = getObjetivo();

		String objetivo = actividadPlanCacheModel.objetivo;

		if ((objetivo != null) && (objetivo.length() == 0)) {
			actividadPlanCacheModel.objetivo = null;
		}

		actividadPlanCacheModel.activo = getActivo();

		actividadPlanCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			actividadPlanCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			actividadPlanCacheModel.fechacrea = Long.MIN_VALUE;
		}

		actividadPlanCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechamodifica = getFechamodifica();

		if (fechamodifica != null) {
			actividadPlanCacheModel.fechamodifica = fechamodifica.getTime();
		}
		else {
			actividadPlanCacheModel.fechamodifica = Long.MIN_VALUE;
		}

		return actividadPlanCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{actividadPlanId=");
		sb.append(getActividadPlanId());
		sb.append(", planAccionId=");
		sb.append(getPlanAccionId());
		sb.append(", responsable=");
		sb.append(getResponsable());
		sb.append(", actividad=");
		sb.append(getActividad());
		sb.append(", evidencia=");
		sb.append(getEvidencia());
		sb.append(", objetivo=");
		sb.append(getObjetivo());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechamodifica=");
		sb.append(getFechamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.hitss.layer.model.ActividadPlan");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>actividadPlanId</column-name><column-value><![CDATA[");
		sb.append(getActividadPlanId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>planAccionId</column-name><column-value><![CDATA[");
		sb.append(getPlanAccionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>responsable</column-name><column-value><![CDATA[");
		sb.append(getResponsable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actividad</column-name><column-value><![CDATA[");
		sb.append(getActividad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>evidencia</column-name><column-value><![CDATA[");
		sb.append(getEvidencia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>objetivo</column-name><column-value><![CDATA[");
		sb.append(getObjetivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActividadPlan.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ActividadPlan.class
		};
	private long _actividadPlanId;
	private long _planAccionId;
	private long _responsable;
	private String _actividad;
	private String _evidencia;
	private String _objetivo;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechamodifica;
	private ActividadPlan _escapedModel;
}