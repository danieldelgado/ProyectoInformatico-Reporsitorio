/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hitss.layer.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Observaciones service. Represents a row in the &quot;Observaciones&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.hitss.layer.model.impl.ObservacionesModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.hitss.layer.model.impl.ObservacionesImpl}.
 * </p>
 *
 * @author Danielle Delgado
 * @see Observaciones
 * @see com.hitss.layer.model.impl.ObservacionesImpl
 * @see com.hitss.layer.model.impl.ObservacionesModelImpl
 * @generated
 */
public interface ObservacionesModel extends BaseModel<Observaciones> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a observaciones model instance should use the {@link Observaciones} interface instead.
	 */

	/**
	 * Returns the primary key of this observaciones.
	 *
	 * @return the primary key of this observaciones
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this observaciones.
	 *
	 * @param primaryKey the primary key of this observaciones
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the observacion ID of this observaciones.
	 *
	 * @return the observacion ID of this observaciones
	 */
	public long getObservacionId();

	/**
	 * Sets the observacion ID of this observaciones.
	 *
	 * @param observacionId the observacion ID of this observaciones
	 */
	public void setObservacionId(long observacionId);

	/**
	 * Returns the descripcion of this observaciones.
	 *
	 * @return the descripcion of this observaciones
	 */
	@AutoEscape
	public String getDescripcion();

	/**
	 * Sets the descripcion of this observaciones.
	 *
	 * @param descripcion the descripcion of this observaciones
	 */
	public void setDescripcion(String descripcion);

	/**
	 * Returns the tabla of this observaciones.
	 *
	 * @return the tabla of this observaciones
	 */
	@AutoEscape
	public String getTabla();

	/**
	 * Sets the tabla of this observaciones.
	 *
	 * @param tabla the tabla of this observaciones
	 */
	public void setTabla(String tabla);

	/**
	 * Returns the registro ID of this observaciones.
	 *
	 * @return the registro ID of this observaciones
	 */
	public long getRegistroId();

	/**
	 * Sets the registro ID of this observaciones.
	 *
	 * @param registroId the registro ID of this observaciones
	 */
	public void setRegistroId(long registroId);

	/**
	 * Returns the activo of this observaciones.
	 *
	 * @return the activo of this observaciones
	 */
	public boolean getActivo();

	/**
	 * Returns <code>true</code> if this observaciones is activo.
	 *
	 * @return <code>true</code> if this observaciones is activo; <code>false</code> otherwise
	 */
	public boolean isActivo();

	/**
	 * Sets whether this observaciones is activo.
	 *
	 * @param activo the activo of this observaciones
	 */
	public void setActivo(boolean activo);

	/**
	 * Returns the usuariocrea of this observaciones.
	 *
	 * @return the usuariocrea of this observaciones
	 */
	public long getUsuariocrea();

	/**
	 * Sets the usuariocrea of this observaciones.
	 *
	 * @param usuariocrea the usuariocrea of this observaciones
	 */
	public void setUsuariocrea(long usuariocrea);

	/**
	 * Returns the fechacrea of this observaciones.
	 *
	 * @return the fechacrea of this observaciones
	 */
	public Date getFechacrea();

	/**
	 * Sets the fechacrea of this observaciones.
	 *
	 * @param fechacrea the fechacrea of this observaciones
	 */
	public void setFechacrea(Date fechacrea);

	/**
	 * Returns the usuariomodifica of this observaciones.
	 *
	 * @return the usuariomodifica of this observaciones
	 */
	public long getUsuariomodifica();

	/**
	 * Sets the usuariomodifica of this observaciones.
	 *
	 * @param usuariomodifica the usuariomodifica of this observaciones
	 */
	public void setUsuariomodifica(long usuariomodifica);

	/**
	 * Returns the fechamodifica of this observaciones.
	 *
	 * @return the fechamodifica of this observaciones
	 */
	public Date getFechamodifica();

	/**
	 * Sets the fechamodifica of this observaciones.
	 *
	 * @param fechamodifica the fechamodifica of this observaciones
	 */
	public void setFechamodifica(Date fechamodifica);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.hitss.layer.model.Observaciones observaciones);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.hitss.layer.model.Observaciones> toCacheModel();

	@Override
	public com.hitss.layer.model.Observaciones toEscapedModel();

	@Override
	public com.hitss.layer.model.Observaciones toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}