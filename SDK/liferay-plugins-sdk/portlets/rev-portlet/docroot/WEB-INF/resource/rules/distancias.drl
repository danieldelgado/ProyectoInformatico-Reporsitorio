
package com.hitss.rev.dools.impl

dialect "java"

import com.hitss.rev.dools.impl.EvaluacionBean
import com.hitss.rev.dools.impl.EvaluacionPuestoBean
import com.hitss.rev.dools.impl.ExperienciaBean
import com.hitss.rev.dools.impl.Postulacion
import com.hitss.rev.dools.impl.PuestoBean
import com.hitss.rev.dools.impl.ReferenciaBean
import com.hitss.rev.dools.impl.RequisitoBean
import com.hitss.rev.dools.impl.SolicitudReclutamiento
import com.hitss.rev.dools.impl.UsuarioBean
import com.hitss.rev.dools.impl.Haming
import com.hitss.rev.dools.impl.Euclistica
import com.hitss.rev.dools.impl.DataHamming
import com.hitss.rev.dools.impl.DistanciaEuclidiana
import java.util.ArrayList
import java.util.List

/*
rule check5 
no-loop true
when
    			$p : Postulacion( 	    			
	    			$solicitud : solicitudReclutamiento , 
	    			$puesto : solicitudReclutamiento.puesto , 
	    			$usuario : usuarioBean	    			 			
    			)
   
then
   System.out.println( "---------check5---------" );
   System.out.println( "puesto:"+$puesto.getNombre() );
   System.out.println( "usuario:"+$usuario.getNombre() );
   System.out.println( "------------------" );
end
*/


rule "Distancia Hamming y Euclistica Psicologia" when
    $postulacion : Postulacion( $usuario : usuarioBean , $puesto : solicitudReclutamiento.puesto , filtroPostulacion == true && filtroConocimiento == true  && filtroPsicologico == true && filtroTecnico == false )
  	
    $p : PuestoBean(  $evaluaciones   : listaEvaluacionPiscologicas  != null  ) from $puesto
  	$u : UsuarioBean( $ulevaluaciones : listaEvaluacionPiscologicas  != null  ) from $usuario
  
then
   System.out.println( " ----------------------------- " );
   System.out.println( "Distancia Hamming y Euclistica Piscologia " );
   System.out.println( "Id Usuario: " +$u.getIdUsuario());    
   if($ulevaluaciones!=null && !$ulevaluaciones.isEmpty() ){
		   if($evaluaciones!=null && !$evaluaciones.isEmpty() ){
    		   System.out.println( "--Distancia Hamming y Euclistica Piscologia i--" );
		       EvaluacionPuestoBean e = null;	
		       EvaluacionBean e2 = null;	
		       double prom = 0;		       
		       List<Haming> dis = new ArrayList<Haming>();	
		       List<Euclistica> disEu = new ArrayList<Euclistica>();		       
		       Haming a = null;
		       Euclistica euc = null;
			   for( Object o : $evaluaciones ){
			   		e = (EvaluacionPuestoBean)o;
			   		prom = (e.getLimitePorcentajeSuperior()+e.getLimitePorcentajeInferior())/2;			   		
			   		System.out.println( "e:"+e.getId()+" TipoEvaluacion:"+e.getTipoEvaluacion()+ "|prom:"+prom );	
			   		
			   		LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() , "e:"+e.getId()+" TipoEvaluacion:"+e.getTipoEvaluacion()+ "|prom:"+prom );
    				   		
			   		a = new Haming();
			   		a.setValorDefinido(prom);	
			   		euc = new Euclistica();
			   		euc.setValorDefinido(prom);	
			   				   		
					   for( Object o2 : $ulevaluaciones ){
						   	e2 = (EvaluacionBean)o2;							   	
					   		if( e2.getTipoEvaluacion() == e.getTipoEvaluacion() ){			   		
			   		  			System.out.println( "Puntaje Obtenido del usuario");	 
			   		  			LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "Puntaje Obtenido del usuario" );  		
						   		
						   		System.out.println( "e2:"+e2.getId()+" TipoEvaluacion:"+e2.getTipoEvaluacion()+ "|PuntajeObtenido:"+e2.getPuntajeObtenido() + " := "+(e2.getPuntajeObtenido()/35));
								LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "e2:"+e2.getId()+" TipoEvaluacion:"+e2.getTipoEvaluacion()+ "|PuntajeObtenido:"+e2.getPuntajeObtenido() + " := "+(e2.getPuntajeObtenido()/35) );  		
								
								a.setValor((e2.getPuntajeObtenido()/35));
			   					euc.setValor((e2.getPuntajeObtenido()/35));		
					   		}					  
					   }			   		
			   		dis.add(a);	   		
			   		disEu.add(euc);
			   		System.out.println( " ------- ");
			   }
			   	
			   System.out.println( " porcentajeReqCum:" + $postulacion.getPorcentajeReqCum() );	   		
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeReqCum:" + $postulacion.getPorcentajeReqCum() ); 	   
			   System.out.println( " porcentajeRequisitosCumplidoPorUsuario:" + $postulacion.getPorcentajeRequisitosCumplidoPorUsuario() );
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeRequisitosCumplidoPorUsuario:" + $postulacion.getPorcentajeRequisitosCumplidoPorUsuario()  ); 	   			   
			   System.out.println( " porcentajeReqCertiCum:" + $postulacion.getPorcentajeReqCertiCum() );	   			   
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeReqCertiCum:" + $postulacion.getPorcentajeReqCertiCum() ); 
			   System.out.println( " porcentajeCertificadoCumplidoPorUsuario:" + $postulacion.getPorcentajeCertificadoCumplidoPorUsuario() );
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeCertificadoCumplidoPorUsuario:" + $postulacion.getPorcentajeCertificadoCumplidoPorUsuario() ); 		   			   
			   System.out.println( " DataHamming:" + DataHamming.calcularDistancia(dis) );	
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " DataHamming:" + DataHamming.calcularDistancia(dis) ); 
			   System.out.println( " DistanciaEuclidiana:" + DistanciaEuclidiana.calcularDistancia(disEu) );
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " DistanciaEuclidiana:" + DistanciaEuclidiana.calcularDistancia(disEu) );  		
						   		 
			   $postulacion.setDistanciaHammingPsicologico(DataHamming.calcularDistancia(dis));
			   $postulacion.setDistanciaEuclidianaPsicologico(DistanciaEuclidiana.calcularDistancia(disEu));
    		   System.out.println( "--Distancia Hamming y Euclistica Piscologia f--" );
			   			 			  
		   }
		   
		   
   }
   
end



rule "Distancia Hamming y Euclistica Tecnica" when
    $postulacion : Postulacion( $usuario : usuarioBean , $puesto : solicitudReclutamiento.puesto , filtroPostulacion == true && filtroConocimiento == true  && filtroPsicologico == true && filtroTecnico == false )
  	
  	
    $p : PuestoBean(   $evalTecnicas  : listaEvaluacionTecnicas  != null ) from $puesto
  	$u : UsuarioBean(  $uEvalTecnicas : listaEvaluacionTecnicas  != null ) from $usuario
  
  
  
then
   System.out.println( " ----------------------------- " );
   System.out.println( "Distancia Hamming y Euclistica Tecnica " );
   System.out.println( "Id Usuario: " +$u.getIdUsuario());    
   		if($evalTecnicas!=null && !$uEvalTecnicas.isEmpty() ){
		   if($evalTecnicas!=null && !$uEvalTecnicas.isEmpty() ){
    		   System.out.println( "--Distancia Hamming y Euclistica Tecnica i--" );
		       EvaluacionPuestoBean e = null;	
		       EvaluacionBean e2 = null;	
		       double prom = 0;		       
		       List<Haming> dis = new ArrayList<Haming>();	
		       List<Euclistica> disEu = new ArrayList<Euclistica>();		       
		       Haming a = null;
		       Euclistica euc = null;
			   for( Object o : $evalTecnicas ){
			   		e = (EvaluacionPuestoBean)o;
			   		prom = (e.getLimitePorcentajeSuperior()+e.getLimitePorcentajeInferior())/2;			   		
			   		System.out.println( "e:"+e.getId()+" TipoEvaluacion:"+e.getTipoEvaluacion()+ "|prom:"+prom );			   		
			   	    LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "e:"+e.getId()+" TipoEvaluacion:"+e.getTipoEvaluacion()+ "|prom:"+prom );  		
			
			   		a = new Haming();
			   		a.setValorDefinido(prom);	
			   		euc = new Euclistica();
			   		euc.setValorDefinido(prom);	
			   				   		
					   for( Object o2 : $uEvalTecnicas ){
						   	e2 = (EvaluacionBean)o2;							   	
					   		if( e2.getTipoEvaluacion() == e.getTipoEvaluacion() ){			   		
			   		  			System.out.println( "Puntaje Obtenido del usuario");	   		
						   		LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "Puntaje Obtenido del usuario" );  		
								System.out.println( "e2:"+e2.getId()+" TipoEvaluacion:"+e2.getTipoEvaluacion()+ "|PuntajeObtenido:"+e2.getPuntajeObtenido() + " := "+(e2.getPuntajeObtenido()/35));
						   		LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "e2:"+e2.getId()+" TipoEvaluacion:"+e2.getTipoEvaluacion()+ "|PuntajeObtenido:"+e2.getPuntajeObtenido() + " := "+(e2.getPuntajeObtenido()/35) );  		
								a.setValor((e2.getPuntajeObtenido()/35));
			   					euc.setValor((e2.getPuntajeObtenido()/35));		
					   		}					  
					   }			   		
			   		dis.add(a);	   		
			   		disEu.add(euc);
			   		System.out.println( " ------- ");
			   }
			   	
			   System.out.println( " porcentajeReqCum:" + $postulacion.getPorcentajeReqCum() );	   	
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeReqCum:" + $postulacion.getPorcentajeReqCum() );  		   
			   System.out.println( " porcentajeRequisitosCumplidoPorUsuario:" + $postulacion.getPorcentajeRequisitosCumplidoPorUsuario() );	
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeRequisitosCumplidoPorUsuario:" + $postulacion.getPorcentajeRequisitosCumplidoPorUsuario() );     			   
			   System.out.println( " porcentajeReqCertiCum:" + $postulacion.getPorcentajeReqCertiCum() );	 
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeReqCertiCum:" + $postulacion.getPorcentajeReqCertiCum() );    			   
			   System.out.println( " porcentajeCertificadoCumplidoPorUsuario:" + $postulacion.getPorcentajeCertificadoCumplidoPorUsuario() );	
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeCertificadoCumplidoPorUsuario:" + $postulacion.getPorcentajeCertificadoCumplidoPorUsuario()  );  	   			   
			   System.out.println( " DataHamming:" + DataHamming.calcularDistancia(dis) );	
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " DataHamming:" + DataHamming.calcularDistancia(dis)  );  
			   System.out.println( " DistanciaEuclidiana:" + DistanciaEuclidiana.calcularDistancia(disEu) );
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " DistanciaEuclidiana:" + DistanciaEuclidiana.calcularDistancia(disEu) );  		
			  
			   $postulacion.setDistanciaHammingTecnico(DataHamming.calcularDistancia(dis));
			   $postulacion.setDistanciaEuclidianaTecnico(DistanciaEuclidiana.calcularDistancia(disEu));
    		   System.out.println( "--Distancia Hamming y Euclistica Tecnica f--" );
			   			 			  
		   }
		   
		   
   }
   
end


rule "Distancia Hamming y Euclistica Entrevistas" when
    $postulacion : Postulacion( $usuario : usuarioBean , $puesto : solicitudReclutamiento.puesto , filtroPostulacion == true && filtroConocimiento == true  && filtroPsicologico == true && filtroTecnico == false )
  	
  	
    $p : PuestoBean(   $entrevistas  : listaEntrevista  != null ) from $puesto
  	$u : UsuarioBean(  $uEntrevistas : listaEntrevista  != null ) from $usuario
  
  
  
then
   System.out.println( " ----------------------------- " );
   System.out.println( "Distancia Hamming y Euclistica Entrevistas " );
   System.out.println( "Id Usuario: " +$u.getIdUsuario());    
   		if($entrevistas!=null && !$uEntrevistas.isEmpty() ){
		   if($entrevistas!=null && !$uEntrevistas.isEmpty() ){
    		   System.out.println( "--Distancia Hamming y Euclistica Entrevistas i--" );
		       EvaluacionPuestoBean e = null;	
		       EvaluacionBean e2 = null;	
		       double prom = 0;		       
		       List<Haming> dis = new ArrayList<Haming>();	
		       List<Euclistica> disEu = new ArrayList<Euclistica>();		       
		       Haming a = null;
		       Euclistica euc = null;
			   for( Object o : $entrevistas ){
			   		e = (EvaluacionPuestoBean)o;
			   		prom = (e.getLimitePorcentajeSuperior()+e.getLimitePorcentajeInferior())/2;			   		
			   		System.out.println( "e:"+e.getId()+" TipoEvaluacion:"+e.getTipoEvaluacion()+ "|prom:"+prom );	
			        LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "e:"+e.getId()+" TipoEvaluacion:"+e.getTipoEvaluacion()+ "|prom:"+prom  ); 		   		
			   		a = new Haming();
			   		a.setValorDefinido(prom);	
			   		euc = new Euclistica();
			   		euc.setValorDefinido(prom);	
			   				   		
					   for( Object o2 : $uEntrevistas ){
						   	e2 = (EvaluacionBean)o2;							   	
					   		if( e2.getTipoEvaluacion() == e.getTipoEvaluacion() ){			   		
			   		  			System.out.println( "Puntaje Obtenido del usuario");
			        			LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "Puntaje Obtenido del usuario" ); 	   		
						   		System.out.println( "e2:"+e2.getId()+" TipoEvaluacion:"+e2.getTipoEvaluacion()+ "|PuntajeObtenido:"+e2.getPuntajeObtenido() + " := "+(e2.getPuntajeObtenido()/35));
			        			LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  "e2:"+e2.getId()+" TipoEvaluacion:"+e2.getTipoEvaluacion()+ "|PuntajeObtenido:"+e2.getPuntajeObtenido() + " := "+(e2.getPuntajeObtenido()/35) ); 
								a.setValor((e2.getPuntajeObtenido()/35));
			   					euc.setValor((e2.getPuntajeObtenido()/35));		
					   		}					  
					   }			   		
			   		dis.add(a);	   		
			   		disEu.add(euc);
			   		System.out.println( " ------- ");
			   }
			   	
			   System.out.println( " porcentajeReqCum:" + $postulacion.getPorcentajeReqCum() );	   			   
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeReqCum:" + $postulacion.getPorcentajeReqCum()  ); 	   		
			   System.out.println( " porcentajeRequisitosCumplidoPorUsuario:" + $postulacion.getPorcentajeRequisitosCumplidoPorUsuario() );	   
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeRequisitosCumplidoPorUsuario:" + $postulacion.getPorcentajeRequisitosCumplidoPorUsuario() ); 	   					   
			   System.out.println( " porcentajeReqCertiCum:" + $postulacion.getPorcentajeReqCertiCum() );	   			   
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeReqCertiCum:" + $postulacion.getPorcentajeReqCertiCum() ); 	   		
			   System.out.println( " porcentajeCertificadoCumplidoPorUsuario:" + $postulacion.getPorcentajeCertificadoCumplidoPorUsuario() );
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,  " porcentajeCertificadoCumplidoPorUsuario:" + $postulacion.getPorcentajeCertificadoCumplidoPorUsuario() ); 	   				   			   
			   System.out.println( " DataHamming:" + DataHamming.calcularDistancia(dis) );	
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,   " DataHamming:" + DataHamming.calcularDistancia(dis) ); 	   		
			   System.out.println( " DistanciaEuclidiana:" + DistanciaEuclidiana.calcularDistancia(disEu) );
			   LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() , " DistanciaEuclidiana:" + DistanciaEuclidiana.calcularDistancia(disEu)); 	   		
			  
			   $postulacion.setDistanciaHammingEntrevista(DataHamming.calcularDistancia(dis));
			   $postulacion.setDistanciaEuclidianaEntrevista(DistanciaEuclidiana.calcularDistancia(disEu));
    		   System.out.println( "--Distancia Hamming y Euclistica Entrevistas f--" );
			   			 			  
		   }
		   
		   
   }
   
end

