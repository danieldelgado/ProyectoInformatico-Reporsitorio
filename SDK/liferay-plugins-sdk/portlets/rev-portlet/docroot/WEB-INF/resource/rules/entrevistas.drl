
package com.hitss.rev.dools.impl

 dialect "java"



import com.hitss.rev.dools.impl.EvaluacionBean
import com.hitss.rev.dools.impl.EvaluacionPuestoBean
import com.hitss.rev.dools.impl.ExperienciaBean
import com.hitss.rev.dools.impl.Postulacion
import com.hitss.rev.dools.impl.PuestoBean
import com.hitss.rev.dools.impl.ReferenciaBean
import com.hitss.rev.dools.impl.RequisitoBean
import com.hitss.rev.dools.impl.SolicitudReclutamiento
import com.hitss.rev.dools.impl.UsuarioBean
import com.hitss.rev.dools.impl.LogTraza

/*
rule check4 
no-loop true
when
    			$postulacion : Postulacion( 	    			
	    			$solicitud : solicitudReclutamiento , 
	    			$puesto : solicitudReclutamiento.puesto , 
	    			$usuario : usuarioBean	    			 			
    			)
   
    $u : UsuarioBean( $ulevaluaciones : listaEntrevista  != null  ) from $usuario
    $p : PuestoBean( $evaluaciones : listaEntrevista  != null  ) from $puesto
   
then
   System.out.println( "--------check4----------" );
   System.out.println( "puesto:"+$puesto.getNombre() );
   System.out.println( "usuario:"+$usuario.getNombre() );
   System.out.println( $ulevaluaciones!=null && !$ulevaluaciones.isEmpty() );
   System.out.println( $evaluaciones!=null && !$evaluaciones.isEmpty()  );
   System.out.println( "filtroPostulacion:"+$postulacion.isFiltroPostulacion() );
   System.out.println( "filtroConocimiento:"+$postulacion.isFiltroConocimiento() );
   System.out.println( "filtroPsicologico:"+$postulacion.isFiltroPsicologico() );
   System.out.println( "filtroTecnico:"+$postulacion.isFiltroTecnico() );
   System.out.println( "filtroEtrevistas:"+$postulacion.isFiltroEtrevistas() );
   System.out.println( "------------------" );
end
*/

rule "Analizar Entrevistas"    
 
no-loop true
salience 8

when
    $postulacion : Postulacion( 
    $usuario : usuarioBean , 
    $puesto : solicitudReclutamiento.puesto ,     
	    filtroPostulacion == true && 
	    filtroConocimiento == true  && 
	    filtroPsicologico == false && 
	    filtroTecnico == false && 
	    filtroEtrevistas == false )
    
    $u : UsuarioBean( $ulevaluaciones : listaEntrevista  != null  ) from $usuario
    $p : PuestoBean( $evaluaciones : listaEntrevista  != null  ) from $puesto
    
then
    
	System.out.println( "rule AE	A ----	" );
	System.out.println( "rule AE 1: " +$u.getIdUsuario()); 
    LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,"rule AE 1: " +$u.getIdUsuario()); 
    				
	if($ulevaluaciones!=null && !$ulevaluaciones.isEmpty() ){
		System.out.println( "rule AE	B ----	" );	
		System.out.println( "rule AE 2: " +$u.getIdUsuario()); 
	    LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() ,"rule AE 2: " +$u.getIdUsuario()); 
		if($evaluaciones!=null && !$evaluaciones.isEmpty() ){
    		System.out.println( "--Analizar Entrevistas i--" );
			EvaluacionBean usuEval = null;
			EvaluacionPuestoBean puestEval = null;	
			
			int countEvalRendidas = $ulevaluaciones.size();
			int countEvalRequeridas = $evaluaciones.size();
			
			for(Object  o : $ulevaluaciones){
				usuEval = (EvaluacionBean) o;			
				System.out.println( "usuEval.getId():"+usuEval.getId()+"||usuEval.getTipoEvaluacion():"+usuEval.getTipoEvaluacion() +"||usuEval.getPuntajeObtenido():"+(usuEval.getPuntajeObtenido()/35) );	// el divisor es la cantidad de preguntas
				LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() , "usuEval.getId():"+usuEval.getId()+"||usuEval.getTipoEvaluacion():"+usuEval.getTipoEvaluacion() +"||usuEval.getPuntajeObtenido():"+(usuEval.getPuntajeObtenido()/35) );
    			for(Object  o2 : $evaluaciones){
					puestEval = (EvaluacionPuestoBean) o2;				
					System.out.println( "||puestEval.getId():"+puestEval.getId()+"||puestEval.getTipoEvaluacion():"+puestEval.getTipoEvaluacion()+"||puestEval.getLimitePorcentajeInferior():"+puestEval.getLimitePorcentajeInferior()+"||puestEval.getLimitePorcentajeSuperior():"+puestEval.getLimitePorcentajeSuperior() );		
					
					LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() , "||puestEval.getId():"+puestEval.getId()+"||puestEval.getTipoEvaluacion():"+puestEval.getTipoEvaluacion()+"||puestEval.getLimitePorcentajeInferior():"+puestEval.getLimitePorcentajeInferior()+"||puestEval.getLimitePorcentajeSuperior():"+puestEval.getLimitePorcentajeSuperior() );
				
					if( usuEval.getTipoEvaluacion() == puestEval.getTipoEvaluacion() ){						
						if( puestEval.getLimitePorcentajeInferior()<=  usuEval.getPuntajeObtenido() &&  (usuEval.getPuntajeObtenido()/35)   <=   puestEval.getLimitePorcentajeSuperior() ){
							usuEval.setEvaluacionAceptada(true);
							break;
						}			
					}				
				}
				if(usuEval.isEvaluacionAceptada()){
					continue;
				}		
			}			
			
    		System.out.println( "Analisis de Entrevistas " );
    		LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() , "Analisis de Entrevistas " );
    		System.out.println( "Id Usuario entrevistas: " +$u.getIdUsuario()); 
    		LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() , "Id Usuario entrevistas: " +$u.getIdUsuario()); 
			for(Object  o : $ulevaluaciones){
				usuEval = (EvaluacionBean) o;
				System.out.println( "%Entrevistas:"+usuEval.getId()+"|| Tipo:"+usuEval.getTipoEvaluacion()+"|| Rango Aceptable:"+usuEval.isEvaluacionAceptada() );	
				LogTraza.log( $postulacion.getPostulacionId() , $postulacion.getUsuarioId() , "%Entrevistas:"+usuEval.getId()+"|| Tipo:"+usuEval.getTipoEvaluacion()+"|| Rango Aceptable:"+usuEval.isEvaluacionAceptada() );	
			}
			if( countEvalRequeridas <= countEvalRendidas ){
				if(!$postulacion.isFiltroEtrevistas()){
					$postulacion.setFiltroEtrevistas(true);
					update($postulacion);
				}
			}
    		System.out.println( "--Analizar Entrevistas f--" );
		}
	}

end
