/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rec.hitss.layer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.rec.hitss.layer.model.UsuarioRequisito;
import com.rec.hitss.layer.model.UsuarioRequisitoModel;
import com.rec.hitss.layer.model.UsuarioRequisitoSoap;
import com.rec.hitss.layer.service.persistence.UsuarioRequisitoPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UsuarioRequisito service. Represents a row in the &quot;UsuarioRequisito&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rec.hitss.layer.model.UsuarioRequisitoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UsuarioRequisitoImpl}.
 * </p>
 *
 * @author Crossfire
 * @see UsuarioRequisitoImpl
 * @see com.rec.hitss.layer.model.UsuarioRequisito
 * @see com.rec.hitss.layer.model.UsuarioRequisitoModel
 * @generated
 */
@JSON(strict = true)
public class UsuarioRequisitoModelImpl extends BaseModelImpl<UsuarioRequisito>
	implements UsuarioRequisitoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a usuario requisito model instance should use the {@link com.rec.hitss.layer.model.UsuarioRequisito} interface instead.
	 */
	public static final String TABLE_NAME = "UsuarioRequisito";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "requisitoId", Types.BIGINT },
			{ "cumplerequisito", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table UsuarioRequisito (userId LONG not null,requisitoId LONG not null,cumplerequisito BOOLEAN,primary key (userId, requisitoId))";
	public static final String TABLE_SQL_DROP = "drop table UsuarioRequisito";
	public static final String ORDER_BY_JPQL = " ORDER BY usuarioRequisito.id.userId ASC, usuarioRequisito.id.requisitoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UsuarioRequisito.userId ASC, UsuarioRequisito.requisitoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rec.hitss.layer.model.UsuarioRequisito"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rec.hitss.layer.model.UsuarioRequisito"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static UsuarioRequisito toModel(UsuarioRequisitoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		UsuarioRequisito model = new UsuarioRequisitoImpl();

		model.setUserId(soapModel.getUserId());
		model.setRequisitoId(soapModel.getRequisitoId());
		model.setCumplerequisito(soapModel.getCumplerequisito());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<UsuarioRequisito> toModels(
		UsuarioRequisitoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<UsuarioRequisito> models = new ArrayList<UsuarioRequisito>(soapModels.length);

		for (UsuarioRequisitoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rec.hitss.layer.model.UsuarioRequisito"));

	public UsuarioRequisitoModelImpl() {
	}

	@Override
	public UsuarioRequisitoPK getPrimaryKey() {
		return new UsuarioRequisitoPK(_userId, _requisitoId);
	}

	@Override
	public void setPrimaryKey(UsuarioRequisitoPK primaryKey) {
		setUserId(primaryKey.userId);
		setRequisitoId(primaryKey.requisitoId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new UsuarioRequisitoPK(_userId, _requisitoId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((UsuarioRequisitoPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return UsuarioRequisito.class;
	}

	@Override
	public String getModelClassName() {
		return UsuarioRequisito.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("requisitoId", getRequisitoId());
		attributes.put("cumplerequisito", getCumplerequisito());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long requisitoId = (Long)attributes.get("requisitoId");

		if (requisitoId != null) {
			setRequisitoId(requisitoId);
		}

		Boolean cumplerequisito = (Boolean)attributes.get("cumplerequisito");

		if (cumplerequisito != null) {
			setCumplerequisito(cumplerequisito);
		}
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getRequisitoId() {
		return _requisitoId;
	}

	@Override
	public void setRequisitoId(long requisitoId) {
		_requisitoId = requisitoId;
	}

	@JSON
	@Override
	public boolean getCumplerequisito() {
		return _cumplerequisito;
	}

	@Override
	public boolean isCumplerequisito() {
		return _cumplerequisito;
	}

	@Override
	public void setCumplerequisito(boolean cumplerequisito) {
		_cumplerequisito = cumplerequisito;
	}

	@Override
	public UsuarioRequisito toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UsuarioRequisito)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UsuarioRequisitoImpl usuarioRequisitoImpl = new UsuarioRequisitoImpl();

		usuarioRequisitoImpl.setUserId(getUserId());
		usuarioRequisitoImpl.setRequisitoId(getRequisitoId());
		usuarioRequisitoImpl.setCumplerequisito(getCumplerequisito());

		usuarioRequisitoImpl.resetOriginalValues();

		return usuarioRequisitoImpl;
	}

	@Override
	public int compareTo(UsuarioRequisito usuarioRequisito) {
		UsuarioRequisitoPK primaryKey = usuarioRequisito.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UsuarioRequisito)) {
			return false;
		}

		UsuarioRequisito usuarioRequisito = (UsuarioRequisito)obj;

		UsuarioRequisitoPK primaryKey = usuarioRequisito.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<UsuarioRequisito> toCacheModel() {
		UsuarioRequisitoCacheModel usuarioRequisitoCacheModel = new UsuarioRequisitoCacheModel();

		usuarioRequisitoCacheModel.userId = getUserId();

		usuarioRequisitoCacheModel.requisitoId = getRequisitoId();

		usuarioRequisitoCacheModel.cumplerequisito = getCumplerequisito();

		return usuarioRequisitoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", requisitoId=");
		sb.append(getRequisitoId());
		sb.append(", cumplerequisito=");
		sb.append(getCumplerequisito());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.rec.hitss.layer.model.UsuarioRequisito");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requisitoId</column-name><column-value><![CDATA[");
		sb.append(getRequisitoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cumplerequisito</column-name><column-value><![CDATA[");
		sb.append(getCumplerequisito());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = UsuarioRequisito.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			UsuarioRequisito.class
		};
	private long _userId;
	private String _userUuid;
	private long _requisitoId;
	private boolean _cumplerequisito;
	private UsuarioRequisito _escapedModel;
}