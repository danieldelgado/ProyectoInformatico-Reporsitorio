/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rec.hitss.layer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rec.hitss.layer.model.Contrato;
import com.rec.hitss.layer.model.ContratoModel;
import com.rec.hitss.layer.model.ContratoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Contrato service. Represents a row in the &quot;Contrato&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rec.hitss.layer.model.ContratoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ContratoImpl}.
 * </p>
 *
 * @author Crossfire
 * @see ContratoImpl
 * @see com.rec.hitss.layer.model.Contrato
 * @see com.rec.hitss.layer.model.ContratoModel
 * @generated
 */
@JSON(strict = true)
public class ContratoModelImpl extends BaseModelImpl<Contrato>
	implements ContratoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a contrato model instance should use the {@link com.rec.hitss.layer.model.Contrato} interface instead.
	 */
	public static final String TABLE_NAME = "Contrato";
	public static final Object[][] TABLE_COLUMNS = {
			{ "contratoId", Types.BIGINT },
			{ "descripcion", Types.VARCHAR },
			{ "fechaEmitida", Types.TIMESTAMP },
			{ "Titulo", Types.BOOLEAN },
			{ "Motivo", Types.VARCHAR },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechacreamodifica", Types.TIMESTAMP },
			{ "usuarioHitssId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Contrato (contratoId LONG not null primary key,descripcion VARCHAR(75) null,fechaEmitida DATE null,Titulo BOOLEAN,Motivo VARCHAR(75) null,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechacreamodifica DATE null,usuarioHitssId LONG)";
	public static final String TABLE_SQL_DROP = "drop table Contrato";
	public static final String ORDER_BY_JPQL = " ORDER BY contrato.fechacrea ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Contrato.fechacrea ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rec.hitss.layer.model.Contrato"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rec.hitss.layer.model.Contrato"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Contrato toModel(ContratoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Contrato model = new ContratoImpl();

		model.setContratoId(soapModel.getContratoId());
		model.setDescripcion(soapModel.getDescripcion());
		model.setFechaEmitida(soapModel.getFechaEmitida());
		model.setTitulo(soapModel.getTitulo());
		model.setMotivo(soapModel.getMotivo());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechacreamodifica(soapModel.getFechacreamodifica());
		model.setUsuarioHitssId(soapModel.getUsuarioHitssId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Contrato> toModels(ContratoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Contrato> models = new ArrayList<Contrato>(soapModels.length);

		for (ContratoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rec.hitss.layer.model.Contrato"));

	public ContratoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _contratoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setContratoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _contratoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Contrato.class;
	}

	@Override
	public String getModelClassName() {
		return Contrato.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("contratoId", getContratoId());
		attributes.put("descripcion", getDescripcion());
		attributes.put("fechaEmitida", getFechaEmitida());
		attributes.put("Titulo", getTitulo());
		attributes.put("Motivo", getMotivo());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechacreamodifica", getFechacreamodifica());
		attributes.put("usuarioHitssId", getUsuarioHitssId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long contratoId = (Long)attributes.get("contratoId");

		if (contratoId != null) {
			setContratoId(contratoId);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Date fechaEmitida = (Date)attributes.get("fechaEmitida");

		if (fechaEmitida != null) {
			setFechaEmitida(fechaEmitida);
		}

		Boolean Titulo = (Boolean)attributes.get("Titulo");

		if (Titulo != null) {
			setTitulo(Titulo);
		}

		String Motivo = (String)attributes.get("Motivo");

		if (Motivo != null) {
			setMotivo(Motivo);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechacreamodifica = (Date)attributes.get("fechacreamodifica");

		if (fechacreamodifica != null) {
			setFechacreamodifica(fechacreamodifica);
		}

		Long usuarioHitssId = (Long)attributes.get("usuarioHitssId");

		if (usuarioHitssId != null) {
			setUsuarioHitssId(usuarioHitssId);
		}
	}

	@JSON
	@Override
	public long getContratoId() {
		return _contratoId;
	}

	@Override
	public void setContratoId(long contratoId) {
		_contratoId = contratoId;
	}

	@JSON
	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	@JSON
	@Override
	public Date getFechaEmitida() {
		return _fechaEmitida;
	}

	@Override
	public void setFechaEmitida(Date fechaEmitida) {
		_fechaEmitida = fechaEmitida;
	}

	@JSON
	@Override
	public boolean getTitulo() {
		return _Titulo;
	}

	@Override
	public boolean isTitulo() {
		return _Titulo;
	}

	@Override
	public void setTitulo(boolean Titulo) {
		_Titulo = Titulo;
	}

	@JSON
	@Override
	public String getMotivo() {
		if (_Motivo == null) {
			return StringPool.BLANK;
		}
		else {
			return _Motivo;
		}
	}

	@Override
	public void setMotivo(String Motivo) {
		_Motivo = Motivo;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechacreamodifica() {
		return _fechacreamodifica;
	}

	@Override
	public void setFechacreamodifica(Date fechacreamodifica) {
		_fechacreamodifica = fechacreamodifica;
	}

	@JSON
	@Override
	public long getUsuarioHitssId() {
		return _usuarioHitssId;
	}

	@Override
	public void setUsuarioHitssId(long usuarioHitssId) {
		_usuarioHitssId = usuarioHitssId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Contrato.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Contrato toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Contrato)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ContratoImpl contratoImpl = new ContratoImpl();

		contratoImpl.setContratoId(getContratoId());
		contratoImpl.setDescripcion(getDescripcion());
		contratoImpl.setFechaEmitida(getFechaEmitida());
		contratoImpl.setTitulo(getTitulo());
		contratoImpl.setMotivo(getMotivo());
		contratoImpl.setActivo(getActivo());
		contratoImpl.setUsuariocrea(getUsuariocrea());
		contratoImpl.setFechacrea(getFechacrea());
		contratoImpl.setUsuariomodifica(getUsuariomodifica());
		contratoImpl.setFechacreamodifica(getFechacreamodifica());
		contratoImpl.setUsuarioHitssId(getUsuarioHitssId());

		contratoImpl.resetOriginalValues();

		return contratoImpl;
	}

	@Override
	public int compareTo(Contrato contrato) {
		int value = 0;

		value = DateUtil.compareTo(getFechacrea(), contrato.getFechacrea());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Contrato)) {
			return false;
		}

		Contrato contrato = (Contrato)obj;

		long primaryKey = contrato.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Contrato> toCacheModel() {
		ContratoCacheModel contratoCacheModel = new ContratoCacheModel();

		contratoCacheModel.contratoId = getContratoId();

		contratoCacheModel.descripcion = getDescripcion();

		String descripcion = contratoCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			contratoCacheModel.descripcion = null;
		}

		Date fechaEmitida = getFechaEmitida();

		if (fechaEmitida != null) {
			contratoCacheModel.fechaEmitida = fechaEmitida.getTime();
		}
		else {
			contratoCacheModel.fechaEmitida = Long.MIN_VALUE;
		}

		contratoCacheModel.Titulo = getTitulo();

		contratoCacheModel.Motivo = getMotivo();

		String Motivo = contratoCacheModel.Motivo;

		if ((Motivo != null) && (Motivo.length() == 0)) {
			contratoCacheModel.Motivo = null;
		}

		contratoCacheModel.activo = getActivo();

		contratoCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			contratoCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			contratoCacheModel.fechacrea = Long.MIN_VALUE;
		}

		contratoCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechacreamodifica = getFechacreamodifica();

		if (fechacreamodifica != null) {
			contratoCacheModel.fechacreamodifica = fechacreamodifica.getTime();
		}
		else {
			contratoCacheModel.fechacreamodifica = Long.MIN_VALUE;
		}

		contratoCacheModel.usuarioHitssId = getUsuarioHitssId();

		return contratoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{contratoId=");
		sb.append(getContratoId());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", fechaEmitida=");
		sb.append(getFechaEmitida());
		sb.append(", Titulo=");
		sb.append(getTitulo());
		sb.append(", Motivo=");
		sb.append(getMotivo());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechacreamodifica=");
		sb.append(getFechacreamodifica());
		sb.append(", usuarioHitssId=");
		sb.append(getUsuarioHitssId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.rec.hitss.layer.model.Contrato");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>contratoId</column-name><column-value><![CDATA[");
		sb.append(getContratoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaEmitida</column-name><column-value><![CDATA[");
		sb.append(getFechaEmitida());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Titulo</column-name><column-value><![CDATA[");
		sb.append(getTitulo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Motivo</column-name><column-value><![CDATA[");
		sb.append(getMotivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacreamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechacreamodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioHitssId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioHitssId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Contrato.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Contrato.class
		};
	private long _contratoId;
	private String _descripcion;
	private Date _fechaEmitida;
	private boolean _Titulo;
	private String _Motivo;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechacreamodifica;
	private long _usuarioHitssId;
	private Contrato _escapedModel;
}