/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rec.hitss.layer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rec.hitss.layer.model.FuncionUsuario;
import com.rec.hitss.layer.model.FuncionUsuarioModel;
import com.rec.hitss.layer.model.FuncionUsuarioSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the FuncionUsuario service. Represents a row in the &quot;FuncionUsuario&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rec.hitss.layer.model.FuncionUsuarioModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FuncionUsuarioImpl}.
 * </p>
 *
 * @author Crossfire
 * @see FuncionUsuarioImpl
 * @see com.rec.hitss.layer.model.FuncionUsuario
 * @see com.rec.hitss.layer.model.FuncionUsuarioModel
 * @generated
 */
@JSON(strict = true)
public class FuncionUsuarioModelImpl extends BaseModelImpl<FuncionUsuario>
	implements FuncionUsuarioModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a funcion usuario model instance should use the {@link com.rec.hitss.layer.model.FuncionUsuario} interface instead.
	 */
	public static final String TABLE_NAME = "FuncionUsuario";
	public static final Object[][] TABLE_COLUMNS = {
			{ "funcionId", Types.BIGINT },
			{ "usuarioHitssId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table FuncionUsuario (funcionId LONG not null primary key,usuarioHitssId LONG)";
	public static final String TABLE_SQL_DROP = "drop table FuncionUsuario";
	public static final String ORDER_BY_JPQL = " ORDER BY funcionUsuario.funcionId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY FuncionUsuario.funcionId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rec.hitss.layer.model.FuncionUsuario"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rec.hitss.layer.model.FuncionUsuario"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FuncionUsuario toModel(FuncionUsuarioSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		FuncionUsuario model = new FuncionUsuarioImpl();

		model.setFuncionId(soapModel.getFuncionId());
		model.setUsuarioHitssId(soapModel.getUsuarioHitssId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FuncionUsuario> toModels(FuncionUsuarioSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<FuncionUsuario> models = new ArrayList<FuncionUsuario>(soapModels.length);

		for (FuncionUsuarioSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rec.hitss.layer.model.FuncionUsuario"));

	public FuncionUsuarioModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _funcionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFuncionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _funcionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FuncionUsuario.class;
	}

	@Override
	public String getModelClassName() {
		return FuncionUsuario.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("funcionId", getFuncionId());
		attributes.put("usuarioHitssId", getUsuarioHitssId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long funcionId = (Long)attributes.get("funcionId");

		if (funcionId != null) {
			setFuncionId(funcionId);
		}

		Long usuarioHitssId = (Long)attributes.get("usuarioHitssId");

		if (usuarioHitssId != null) {
			setUsuarioHitssId(usuarioHitssId);
		}
	}

	@JSON
	@Override
	public long getFuncionId() {
		return _funcionId;
	}

	@Override
	public void setFuncionId(long funcionId) {
		_funcionId = funcionId;
	}

	@JSON
	@Override
	public long getUsuarioHitssId() {
		return _usuarioHitssId;
	}

	@Override
	public void setUsuarioHitssId(long usuarioHitssId) {
		_usuarioHitssId = usuarioHitssId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			FuncionUsuario.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FuncionUsuario toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FuncionUsuario)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FuncionUsuarioImpl funcionUsuarioImpl = new FuncionUsuarioImpl();

		funcionUsuarioImpl.setFuncionId(getFuncionId());
		funcionUsuarioImpl.setUsuarioHitssId(getUsuarioHitssId());

		funcionUsuarioImpl.resetOriginalValues();

		return funcionUsuarioImpl;
	}

	@Override
	public int compareTo(FuncionUsuario funcionUsuario) {
		long primaryKey = funcionUsuario.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FuncionUsuario)) {
			return false;
		}

		FuncionUsuario funcionUsuario = (FuncionUsuario)obj;

		long primaryKey = funcionUsuario.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<FuncionUsuario> toCacheModel() {
		FuncionUsuarioCacheModel funcionUsuarioCacheModel = new FuncionUsuarioCacheModel();

		funcionUsuarioCacheModel.funcionId = getFuncionId();

		funcionUsuarioCacheModel.usuarioHitssId = getUsuarioHitssId();

		return funcionUsuarioCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{funcionId=");
		sb.append(getFuncionId());
		sb.append(", usuarioHitssId=");
		sb.append(getUsuarioHitssId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.rec.hitss.layer.model.FuncionUsuario");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>funcionId</column-name><column-value><![CDATA[");
		sb.append(getFuncionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioHitssId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioHitssId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = FuncionUsuario.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			FuncionUsuario.class
		};
	private long _funcionId;
	private long _usuarioHitssId;
	private FuncionUsuario _escapedModel;
}