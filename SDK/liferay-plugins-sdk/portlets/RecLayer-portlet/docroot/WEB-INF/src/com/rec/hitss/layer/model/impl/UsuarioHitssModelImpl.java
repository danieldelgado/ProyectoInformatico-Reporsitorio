/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rec.hitss.layer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rec.hitss.layer.model.UsuarioHitss;
import com.rec.hitss.layer.model.UsuarioHitssModel;
import com.rec.hitss.layer.model.UsuarioHitssSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UsuarioHitss service. Represents a row in the &quot;UsuarioHitss&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rec.hitss.layer.model.UsuarioHitssModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UsuarioHitssImpl}.
 * </p>
 *
 * @author Crossfire
 * @see UsuarioHitssImpl
 * @see com.rec.hitss.layer.model.UsuarioHitss
 * @see com.rec.hitss.layer.model.UsuarioHitssModel
 * @generated
 */
@JSON(strict = true)
public class UsuarioHitssModelImpl extends BaseModelImpl<UsuarioHitss>
	implements UsuarioHitssModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a usuario hitss model instance should use the {@link com.rec.hitss.layer.model.UsuarioHitss} interface instead.
	 */
	public static final String TABLE_NAME = "UsuarioHitss";
	public static final Object[][] TABLE_COLUMNS = {
			{ "usuarioHitssId", Types.BIGINT },
			{ "userId", Types.VARCHAR },
			{ "userUuId", Types.VARCHAR },
			{ "actividadPlanId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table UsuarioHitss (usuarioHitssId LONG not null primary key,userId VARCHAR(75) null,userUuId VARCHAR(75) null,actividadPlanId LONG)";
	public static final String TABLE_SQL_DROP = "drop table UsuarioHitss";
	public static final String ORDER_BY_JPQL = " ORDER BY usuarioHitss.usuarioHitssId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UsuarioHitss.usuarioHitssId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rec.hitss.layer.model.UsuarioHitss"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rec.hitss.layer.model.UsuarioHitss"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static UsuarioHitss toModel(UsuarioHitssSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		UsuarioHitss model = new UsuarioHitssImpl();

		model.setUsuarioHitssId(soapModel.getUsuarioHitssId());
		model.setUserId(soapModel.getUserId());
		model.setUserUuId(soapModel.getUserUuId());
		model.setActividadPlanId(soapModel.getActividadPlanId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<UsuarioHitss> toModels(UsuarioHitssSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<UsuarioHitss> models = new ArrayList<UsuarioHitss>(soapModels.length);

		for (UsuarioHitssSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rec.hitss.layer.model.UsuarioHitss"));

	public UsuarioHitssModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _usuarioHitssId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setUsuarioHitssId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _usuarioHitssId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return UsuarioHitss.class;
	}

	@Override
	public String getModelClassName() {
		return UsuarioHitss.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("usuarioHitssId", getUsuarioHitssId());
		attributes.put("userId", getUserId());
		attributes.put("userUuId", getUserUuId());
		attributes.put("actividadPlanId", getActividadPlanId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long usuarioHitssId = (Long)attributes.get("usuarioHitssId");

		if (usuarioHitssId != null) {
			setUsuarioHitssId(usuarioHitssId);
		}

		String userId = (String)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userUuId = (String)attributes.get("userUuId");

		if (userUuId != null) {
			setUserUuId(userUuId);
		}

		Long actividadPlanId = (Long)attributes.get("actividadPlanId");

		if (actividadPlanId != null) {
			setActividadPlanId(actividadPlanId);
		}
	}

	@JSON
	@Override
	public long getUsuarioHitssId() {
		return _usuarioHitssId;
	}

	@Override
	public void setUsuarioHitssId(long usuarioHitssId) {
		_usuarioHitssId = usuarioHitssId;
	}

	@JSON
	@Override
	public String getUserId() {
		if (_userId == null) {
			return StringPool.BLANK;
		}
		else {
			return _userId;
		}
	}

	@Override
	public void setUserId(String userId) {
		_userId = userId;
	}

	@JSON
	@Override
	public String getUserUuId() {
		if (_userUuId == null) {
			return StringPool.BLANK;
		}
		else {
			return _userUuId;
		}
	}

	@Override
	public void setUserUuId(String userUuId) {
		_userUuId = userUuId;
	}

	@JSON
	@Override
	public long getActividadPlanId() {
		return _actividadPlanId;
	}

	@Override
	public void setActividadPlanId(long actividadPlanId) {
		_actividadPlanId = actividadPlanId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			UsuarioHitss.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public UsuarioHitss toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UsuarioHitss)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UsuarioHitssImpl usuarioHitssImpl = new UsuarioHitssImpl();

		usuarioHitssImpl.setUsuarioHitssId(getUsuarioHitssId());
		usuarioHitssImpl.setUserId(getUserId());
		usuarioHitssImpl.setUserUuId(getUserUuId());
		usuarioHitssImpl.setActividadPlanId(getActividadPlanId());

		usuarioHitssImpl.resetOriginalValues();

		return usuarioHitssImpl;
	}

	@Override
	public int compareTo(UsuarioHitss usuarioHitss) {
		long primaryKey = usuarioHitss.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UsuarioHitss)) {
			return false;
		}

		UsuarioHitss usuarioHitss = (UsuarioHitss)obj;

		long primaryKey = usuarioHitss.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<UsuarioHitss> toCacheModel() {
		UsuarioHitssCacheModel usuarioHitssCacheModel = new UsuarioHitssCacheModel();

		usuarioHitssCacheModel.usuarioHitssId = getUsuarioHitssId();

		usuarioHitssCacheModel.userId = getUserId();

		String userId = usuarioHitssCacheModel.userId;

		if ((userId != null) && (userId.length() == 0)) {
			usuarioHitssCacheModel.userId = null;
		}

		usuarioHitssCacheModel.userUuId = getUserUuId();

		String userUuId = usuarioHitssCacheModel.userUuId;

		if ((userUuId != null) && (userUuId.length() == 0)) {
			usuarioHitssCacheModel.userUuId = null;
		}

		usuarioHitssCacheModel.actividadPlanId = getActividadPlanId();

		return usuarioHitssCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{usuarioHitssId=");
		sb.append(getUsuarioHitssId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userUuId=");
		sb.append(getUserUuId());
		sb.append(", actividadPlanId=");
		sb.append(getActividadPlanId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.rec.hitss.layer.model.UsuarioHitss");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>usuarioHitssId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioHitssId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userUuId</column-name><column-value><![CDATA[");
		sb.append(getUserUuId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actividadPlanId</column-name><column-value><![CDATA[");
		sb.append(getActividadPlanId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = UsuarioHitss.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			UsuarioHitss.class
		};
	private long _usuarioHitssId;
	private String _userId;
	private String _userUuId;
	private long _actividadPlanId;
	private UsuarioHitss _escapedModel;
}