/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rec.hitss.layer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rec.hitss.layer.model.RequerimientoRecurso;
import com.rec.hitss.layer.model.RequerimientoRecursoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RequerimientoRecurso service. Represents a row in the &quot;RequerimientoRecurso&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rec.hitss.layer.model.RequerimientoRecursoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RequerimientoRecursoImpl}.
 * </p>
 *
 * @author Crossfire
 * @see RequerimientoRecursoImpl
 * @see com.rec.hitss.layer.model.RequerimientoRecurso
 * @see com.rec.hitss.layer.model.RequerimientoRecursoModel
 * @generated
 */
public class RequerimientoRecursoModelImpl extends BaseModelImpl<RequerimientoRecurso>
	implements RequerimientoRecursoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a requerimiento recurso model instance should use the {@link com.rec.hitss.layer.model.RequerimientoRecurso} interface instead.
	 */
	public static final String TABLE_NAME = "RequerimientoRecurso";
	public static final Object[][] TABLE_COLUMNS = {
			{ "requerimientoRecursoId", Types.BIGINT },
			{ "especialidad", Types.VARCHAR },
			{ "meta", Types.VARCHAR },
			{ "prioridad", Types.BIGINT },
			{ "motivo", Types.VARCHAR },
			{ "fechaSolicitada", Types.TIMESTAMP },
			{ "fechaMetaIngreso", Types.VARCHAR },
			{ "estado", Types.VARCHAR },
			{ "modalidad", Types.BIGINT },
			{ "lugarTrabajo", Types.VARCHAR },
			{ "observacion", Types.VARCHAR },
			{ "proyecto", Types.VARCHAR },
			{ "requiereequipotenico", Types.BOOLEAN },
			{ "reemplazo", Types.BOOLEAN },
			{ "revisado", Types.BOOLEAN },
			{ "aprobadoFichaIngresoCapitalHumano", Types.BOOLEAN },
			{ "observacionFichaIngresoCapitalHumano", Types.VARCHAR },
			{ "aprobadoFichaIngresoOperaciones", Types.BOOLEAN },
			{ "observacionFichaIngresoOperaciones", Types.VARCHAR },
			{ "tipoReclutamiento", Types.BIGINT },
			{ "solicitudRequerimientoPersonalId", Types.BIGINT },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechacreamodifica", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table RequerimientoRecurso (requerimientoRecursoId LONG not null primary key,especialidad VARCHAR(75) null,meta VARCHAR(75) null,prioridad LONG,motivo VARCHAR(75) null,fechaSolicitada DATE null,fechaMetaIngreso VARCHAR(75) null,estado VARCHAR(75) null,modalidad LONG,lugarTrabajo VARCHAR(75) null,observacion VARCHAR(75) null,proyecto VARCHAR(75) null,requiereequipotenico BOOLEAN,reemplazo BOOLEAN,revisado BOOLEAN,aprobadoFichaIngresoCapitalHumano BOOLEAN,observacionFichaIngresoCapitalHumano VARCHAR(75) null,aprobadoFichaIngresoOperaciones BOOLEAN,observacionFichaIngresoOperaciones VARCHAR(75) null,tipoReclutamiento LONG,solicitudRequerimientoPersonalId LONG,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechacreamodifica DATE null)";
	public static final String TABLE_SQL_DROP = "drop table RequerimientoRecurso";
	public static final String ORDER_BY_JPQL = " ORDER BY requerimientoRecurso.fechacrea ASC";
	public static final String ORDER_BY_SQL = " ORDER BY RequerimientoRecurso.fechacrea ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rec.hitss.layer.model.RequerimientoRecurso"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rec.hitss.layer.model.RequerimientoRecurso"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rec.hitss.layer.model.RequerimientoRecurso"),
			true);
	public static long SOLICITUDREQUERIMIENTOPERSONALID_COLUMN_BITMASK = 1L;
	public static long FECHACREA_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rec.hitss.layer.model.RequerimientoRecurso"));

	public RequerimientoRecursoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _requerimientoRecursoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRequerimientoRecursoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _requerimientoRecursoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RequerimientoRecurso.class;
	}

	@Override
	public String getModelClassName() {
		return RequerimientoRecurso.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("requerimientoRecursoId", getRequerimientoRecursoId());
		attributes.put("especialidad", getEspecialidad());
		attributes.put("meta", getMeta());
		attributes.put("prioridad", getPrioridad());
		attributes.put("motivo", getMotivo());
		attributes.put("fechaSolicitada", getFechaSolicitada());
		attributes.put("fechaMetaIngreso", getFechaMetaIngreso());
		attributes.put("estado", getEstado());
		attributes.put("modalidad", getModalidad());
		attributes.put("lugarTrabajo", getLugarTrabajo());
		attributes.put("observacion", getObservacion());
		attributes.put("proyecto", getProyecto());
		attributes.put("requiereequipotenico", getRequiereequipotenico());
		attributes.put("reemplazo", getReemplazo());
		attributes.put("revisado", getRevisado());
		attributes.put("aprobadoFichaIngresoCapitalHumano",
			getAprobadoFichaIngresoCapitalHumano());
		attributes.put("observacionFichaIngresoCapitalHumano",
			getObservacionFichaIngresoCapitalHumano());
		attributes.put("aprobadoFichaIngresoOperaciones",
			getAprobadoFichaIngresoOperaciones());
		attributes.put("observacionFichaIngresoOperaciones",
			getObservacionFichaIngresoOperaciones());
		attributes.put("tipoReclutamiento", getTipoReclutamiento());
		attributes.put("solicitudRequerimientoPersonalId",
			getSolicitudRequerimientoPersonalId());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechacreamodifica", getFechacreamodifica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long requerimientoRecursoId = (Long)attributes.get(
				"requerimientoRecursoId");

		if (requerimientoRecursoId != null) {
			setRequerimientoRecursoId(requerimientoRecursoId);
		}

		String especialidad = (String)attributes.get("especialidad");

		if (especialidad != null) {
			setEspecialidad(especialidad);
		}

		String meta = (String)attributes.get("meta");

		if (meta != null) {
			setMeta(meta);
		}

		Long prioridad = (Long)attributes.get("prioridad");

		if (prioridad != null) {
			setPrioridad(prioridad);
		}

		String motivo = (String)attributes.get("motivo");

		if (motivo != null) {
			setMotivo(motivo);
		}

		Date fechaSolicitada = (Date)attributes.get("fechaSolicitada");

		if (fechaSolicitada != null) {
			setFechaSolicitada(fechaSolicitada);
		}

		String fechaMetaIngreso = (String)attributes.get("fechaMetaIngreso");

		if (fechaMetaIngreso != null) {
			setFechaMetaIngreso(fechaMetaIngreso);
		}

		String estado = (String)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}

		Long modalidad = (Long)attributes.get("modalidad");

		if (modalidad != null) {
			setModalidad(modalidad);
		}

		String lugarTrabajo = (String)attributes.get("lugarTrabajo");

		if (lugarTrabajo != null) {
			setLugarTrabajo(lugarTrabajo);
		}

		String observacion = (String)attributes.get("observacion");

		if (observacion != null) {
			setObservacion(observacion);
		}

		String proyecto = (String)attributes.get("proyecto");

		if (proyecto != null) {
			setProyecto(proyecto);
		}

		Boolean requiereequipotenico = (Boolean)attributes.get(
				"requiereequipotenico");

		if (requiereequipotenico != null) {
			setRequiereequipotenico(requiereequipotenico);
		}

		Boolean reemplazo = (Boolean)attributes.get("reemplazo");

		if (reemplazo != null) {
			setReemplazo(reemplazo);
		}

		Boolean revisado = (Boolean)attributes.get("revisado");

		if (revisado != null) {
			setRevisado(revisado);
		}

		Boolean aprobadoFichaIngresoCapitalHumano = (Boolean)attributes.get(
				"aprobadoFichaIngresoCapitalHumano");

		if (aprobadoFichaIngresoCapitalHumano != null) {
			setAprobadoFichaIngresoCapitalHumano(aprobadoFichaIngresoCapitalHumano);
		}

		String observacionFichaIngresoCapitalHumano = (String)attributes.get(
				"observacionFichaIngresoCapitalHumano");

		if (observacionFichaIngresoCapitalHumano != null) {
			setObservacionFichaIngresoCapitalHumano(observacionFichaIngresoCapitalHumano);
		}

		Boolean aprobadoFichaIngresoOperaciones = (Boolean)attributes.get(
				"aprobadoFichaIngresoOperaciones");

		if (aprobadoFichaIngresoOperaciones != null) {
			setAprobadoFichaIngresoOperaciones(aprobadoFichaIngresoOperaciones);
		}

		String observacionFichaIngresoOperaciones = (String)attributes.get(
				"observacionFichaIngresoOperaciones");

		if (observacionFichaIngresoOperaciones != null) {
			setObservacionFichaIngresoOperaciones(observacionFichaIngresoOperaciones);
		}

		Long tipoReclutamiento = (Long)attributes.get("tipoReclutamiento");

		if (tipoReclutamiento != null) {
			setTipoReclutamiento(tipoReclutamiento);
		}

		Long solicitudRequerimientoPersonalId = (Long)attributes.get(
				"solicitudRequerimientoPersonalId");

		if (solicitudRequerimientoPersonalId != null) {
			setSolicitudRequerimientoPersonalId(solicitudRequerimientoPersonalId);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechacreamodifica = (Date)attributes.get("fechacreamodifica");

		if (fechacreamodifica != null) {
			setFechacreamodifica(fechacreamodifica);
		}
	}

	@Override
	public long getRequerimientoRecursoId() {
		return _requerimientoRecursoId;
	}

	@Override
	public void setRequerimientoRecursoId(long requerimientoRecursoId) {
		_requerimientoRecursoId = requerimientoRecursoId;
	}

	@Override
	public String getEspecialidad() {
		if (_especialidad == null) {
			return StringPool.BLANK;
		}
		else {
			return _especialidad;
		}
	}

	@Override
	public void setEspecialidad(String especialidad) {
		_especialidad = especialidad;
	}

	@Override
	public String getMeta() {
		if (_meta == null) {
			return StringPool.BLANK;
		}
		else {
			return _meta;
		}
	}

	@Override
	public void setMeta(String meta) {
		_meta = meta;
	}

	@Override
	public long getPrioridad() {
		return _prioridad;
	}

	@Override
	public void setPrioridad(long prioridad) {
		_prioridad = prioridad;
	}

	@Override
	public String getMotivo() {
		if (_motivo == null) {
			return StringPool.BLANK;
		}
		else {
			return _motivo;
		}
	}

	@Override
	public void setMotivo(String motivo) {
		_motivo = motivo;
	}

	@Override
	public Date getFechaSolicitada() {
		return _fechaSolicitada;
	}

	@Override
	public void setFechaSolicitada(Date fechaSolicitada) {
		_fechaSolicitada = fechaSolicitada;
	}

	@Override
	public String getFechaMetaIngreso() {
		if (_fechaMetaIngreso == null) {
			return StringPool.BLANK;
		}
		else {
			return _fechaMetaIngreso;
		}
	}

	@Override
	public void setFechaMetaIngreso(String fechaMetaIngreso) {
		_fechaMetaIngreso = fechaMetaIngreso;
	}

	@Override
	public String getEstado() {
		if (_estado == null) {
			return StringPool.BLANK;
		}
		else {
			return _estado;
		}
	}

	@Override
	public void setEstado(String estado) {
		_estado = estado;
	}

	@Override
	public long getModalidad() {
		return _modalidad;
	}

	@Override
	public void setModalidad(long modalidad) {
		_modalidad = modalidad;
	}

	@Override
	public String getLugarTrabajo() {
		if (_lugarTrabajo == null) {
			return StringPool.BLANK;
		}
		else {
			return _lugarTrabajo;
		}
	}

	@Override
	public void setLugarTrabajo(String lugarTrabajo) {
		_lugarTrabajo = lugarTrabajo;
	}

	@Override
	public String getObservacion() {
		if (_observacion == null) {
			return StringPool.BLANK;
		}
		else {
			return _observacion;
		}
	}

	@Override
	public void setObservacion(String observacion) {
		_observacion = observacion;
	}

	@Override
	public String getProyecto() {
		if (_proyecto == null) {
			return StringPool.BLANK;
		}
		else {
			return _proyecto;
		}
	}

	@Override
	public void setProyecto(String proyecto) {
		_proyecto = proyecto;
	}

	@Override
	public boolean getRequiereequipotenico() {
		return _requiereequipotenico;
	}

	@Override
	public boolean isRequiereequipotenico() {
		return _requiereequipotenico;
	}

	@Override
	public void setRequiereequipotenico(boolean requiereequipotenico) {
		_requiereequipotenico = requiereequipotenico;
	}

	@Override
	public boolean getReemplazo() {
		return _reemplazo;
	}

	@Override
	public boolean isReemplazo() {
		return _reemplazo;
	}

	@Override
	public void setReemplazo(boolean reemplazo) {
		_reemplazo = reemplazo;
	}

	@Override
	public boolean getRevisado() {
		return _revisado;
	}

	@Override
	public boolean isRevisado() {
		return _revisado;
	}

	@Override
	public void setRevisado(boolean revisado) {
		_revisado = revisado;
	}

	@Override
	public boolean getAprobadoFichaIngresoCapitalHumano() {
		return _aprobadoFichaIngresoCapitalHumano;
	}

	@Override
	public boolean isAprobadoFichaIngresoCapitalHumano() {
		return _aprobadoFichaIngresoCapitalHumano;
	}

	@Override
	public void setAprobadoFichaIngresoCapitalHumano(
		boolean aprobadoFichaIngresoCapitalHumano) {
		_aprobadoFichaIngresoCapitalHumano = aprobadoFichaIngresoCapitalHumano;
	}

	@Override
	public String getObservacionFichaIngresoCapitalHumano() {
		if (_observacionFichaIngresoCapitalHumano == null) {
			return StringPool.BLANK;
		}
		else {
			return _observacionFichaIngresoCapitalHumano;
		}
	}

	@Override
	public void setObservacionFichaIngresoCapitalHumano(
		String observacionFichaIngresoCapitalHumano) {
		_observacionFichaIngresoCapitalHumano = observacionFichaIngresoCapitalHumano;
	}

	@Override
	public boolean getAprobadoFichaIngresoOperaciones() {
		return _aprobadoFichaIngresoOperaciones;
	}

	@Override
	public boolean isAprobadoFichaIngresoOperaciones() {
		return _aprobadoFichaIngresoOperaciones;
	}

	@Override
	public void setAprobadoFichaIngresoOperaciones(
		boolean aprobadoFichaIngresoOperaciones) {
		_aprobadoFichaIngresoOperaciones = aprobadoFichaIngresoOperaciones;
	}

	@Override
	public String getObservacionFichaIngresoOperaciones() {
		if (_observacionFichaIngresoOperaciones == null) {
			return StringPool.BLANK;
		}
		else {
			return _observacionFichaIngresoOperaciones;
		}
	}

	@Override
	public void setObservacionFichaIngresoOperaciones(
		String observacionFichaIngresoOperaciones) {
		_observacionFichaIngresoOperaciones = observacionFichaIngresoOperaciones;
	}

	@Override
	public long getTipoReclutamiento() {
		return _tipoReclutamiento;
	}

	@Override
	public void setTipoReclutamiento(long tipoReclutamiento) {
		_tipoReclutamiento = tipoReclutamiento;
	}

	@Override
	public long getSolicitudRequerimientoPersonalId() {
		return _solicitudRequerimientoPersonalId;
	}

	@Override
	public void setSolicitudRequerimientoPersonalId(
		long solicitudRequerimientoPersonalId) {
		_columnBitmask |= SOLICITUDREQUERIMIENTOPERSONALID_COLUMN_BITMASK;

		if (!_setOriginalSolicitudRequerimientoPersonalId) {
			_setOriginalSolicitudRequerimientoPersonalId = true;

			_originalSolicitudRequerimientoPersonalId = _solicitudRequerimientoPersonalId;
		}

		_solicitudRequerimientoPersonalId = solicitudRequerimientoPersonalId;
	}

	public long getOriginalSolicitudRequerimientoPersonalId() {
		return _originalSolicitudRequerimientoPersonalId;
	}

	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_columnBitmask = -1L;

		_fechacrea = fechacrea;
	}

	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@Override
	public Date getFechacreamodifica() {
		return _fechacreamodifica;
	}

	@Override
	public void setFechacreamodifica(Date fechacreamodifica) {
		_fechacreamodifica = fechacreamodifica;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			RequerimientoRecurso.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RequerimientoRecurso toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RequerimientoRecurso)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RequerimientoRecursoImpl requerimientoRecursoImpl = new RequerimientoRecursoImpl();

		requerimientoRecursoImpl.setRequerimientoRecursoId(getRequerimientoRecursoId());
		requerimientoRecursoImpl.setEspecialidad(getEspecialidad());
		requerimientoRecursoImpl.setMeta(getMeta());
		requerimientoRecursoImpl.setPrioridad(getPrioridad());
		requerimientoRecursoImpl.setMotivo(getMotivo());
		requerimientoRecursoImpl.setFechaSolicitada(getFechaSolicitada());
		requerimientoRecursoImpl.setFechaMetaIngreso(getFechaMetaIngreso());
		requerimientoRecursoImpl.setEstado(getEstado());
		requerimientoRecursoImpl.setModalidad(getModalidad());
		requerimientoRecursoImpl.setLugarTrabajo(getLugarTrabajo());
		requerimientoRecursoImpl.setObservacion(getObservacion());
		requerimientoRecursoImpl.setProyecto(getProyecto());
		requerimientoRecursoImpl.setRequiereequipotenico(getRequiereequipotenico());
		requerimientoRecursoImpl.setReemplazo(getReemplazo());
		requerimientoRecursoImpl.setRevisado(getRevisado());
		requerimientoRecursoImpl.setAprobadoFichaIngresoCapitalHumano(getAprobadoFichaIngresoCapitalHumano());
		requerimientoRecursoImpl.setObservacionFichaIngresoCapitalHumano(getObservacionFichaIngresoCapitalHumano());
		requerimientoRecursoImpl.setAprobadoFichaIngresoOperaciones(getAprobadoFichaIngresoOperaciones());
		requerimientoRecursoImpl.setObservacionFichaIngresoOperaciones(getObservacionFichaIngresoOperaciones());
		requerimientoRecursoImpl.setTipoReclutamiento(getTipoReclutamiento());
		requerimientoRecursoImpl.setSolicitudRequerimientoPersonalId(getSolicitudRequerimientoPersonalId());
		requerimientoRecursoImpl.setActivo(getActivo());
		requerimientoRecursoImpl.setUsuariocrea(getUsuariocrea());
		requerimientoRecursoImpl.setFechacrea(getFechacrea());
		requerimientoRecursoImpl.setUsuariomodifica(getUsuariomodifica());
		requerimientoRecursoImpl.setFechacreamodifica(getFechacreamodifica());

		requerimientoRecursoImpl.resetOriginalValues();

		return requerimientoRecursoImpl;
	}

	@Override
	public int compareTo(RequerimientoRecurso requerimientoRecurso) {
		int value = 0;

		value = DateUtil.compareTo(getFechacrea(),
				requerimientoRecurso.getFechacrea());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RequerimientoRecurso)) {
			return false;
		}

		RequerimientoRecurso requerimientoRecurso = (RequerimientoRecurso)obj;

		long primaryKey = requerimientoRecurso.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		RequerimientoRecursoModelImpl requerimientoRecursoModelImpl = this;

		requerimientoRecursoModelImpl._originalSolicitudRequerimientoPersonalId = requerimientoRecursoModelImpl._solicitudRequerimientoPersonalId;

		requerimientoRecursoModelImpl._setOriginalSolicitudRequerimientoPersonalId = false;

		requerimientoRecursoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RequerimientoRecurso> toCacheModel() {
		RequerimientoRecursoCacheModel requerimientoRecursoCacheModel = new RequerimientoRecursoCacheModel();

		requerimientoRecursoCacheModel.requerimientoRecursoId = getRequerimientoRecursoId();

		requerimientoRecursoCacheModel.especialidad = getEspecialidad();

		String especialidad = requerimientoRecursoCacheModel.especialidad;

		if ((especialidad != null) && (especialidad.length() == 0)) {
			requerimientoRecursoCacheModel.especialidad = null;
		}

		requerimientoRecursoCacheModel.meta = getMeta();

		String meta = requerimientoRecursoCacheModel.meta;

		if ((meta != null) && (meta.length() == 0)) {
			requerimientoRecursoCacheModel.meta = null;
		}

		requerimientoRecursoCacheModel.prioridad = getPrioridad();

		requerimientoRecursoCacheModel.motivo = getMotivo();

		String motivo = requerimientoRecursoCacheModel.motivo;

		if ((motivo != null) && (motivo.length() == 0)) {
			requerimientoRecursoCacheModel.motivo = null;
		}

		Date fechaSolicitada = getFechaSolicitada();

		if (fechaSolicitada != null) {
			requerimientoRecursoCacheModel.fechaSolicitada = fechaSolicitada.getTime();
		}
		else {
			requerimientoRecursoCacheModel.fechaSolicitada = Long.MIN_VALUE;
		}

		requerimientoRecursoCacheModel.fechaMetaIngreso = getFechaMetaIngreso();

		String fechaMetaIngreso = requerimientoRecursoCacheModel.fechaMetaIngreso;

		if ((fechaMetaIngreso != null) && (fechaMetaIngreso.length() == 0)) {
			requerimientoRecursoCacheModel.fechaMetaIngreso = null;
		}

		requerimientoRecursoCacheModel.estado = getEstado();

		String estado = requerimientoRecursoCacheModel.estado;

		if ((estado != null) && (estado.length() == 0)) {
			requerimientoRecursoCacheModel.estado = null;
		}

		requerimientoRecursoCacheModel.modalidad = getModalidad();

		requerimientoRecursoCacheModel.lugarTrabajo = getLugarTrabajo();

		String lugarTrabajo = requerimientoRecursoCacheModel.lugarTrabajo;

		if ((lugarTrabajo != null) && (lugarTrabajo.length() == 0)) {
			requerimientoRecursoCacheModel.lugarTrabajo = null;
		}

		requerimientoRecursoCacheModel.observacion = getObservacion();

		String observacion = requerimientoRecursoCacheModel.observacion;

		if ((observacion != null) && (observacion.length() == 0)) {
			requerimientoRecursoCacheModel.observacion = null;
		}

		requerimientoRecursoCacheModel.proyecto = getProyecto();

		String proyecto = requerimientoRecursoCacheModel.proyecto;

		if ((proyecto != null) && (proyecto.length() == 0)) {
			requerimientoRecursoCacheModel.proyecto = null;
		}

		requerimientoRecursoCacheModel.requiereequipotenico = getRequiereequipotenico();

		requerimientoRecursoCacheModel.reemplazo = getReemplazo();

		requerimientoRecursoCacheModel.revisado = getRevisado();

		requerimientoRecursoCacheModel.aprobadoFichaIngresoCapitalHumano = getAprobadoFichaIngresoCapitalHumano();

		requerimientoRecursoCacheModel.observacionFichaIngresoCapitalHumano = getObservacionFichaIngresoCapitalHumano();

		String observacionFichaIngresoCapitalHumano = requerimientoRecursoCacheModel.observacionFichaIngresoCapitalHumano;

		if ((observacionFichaIngresoCapitalHumano != null) &&
				(observacionFichaIngresoCapitalHumano.length() == 0)) {
			requerimientoRecursoCacheModel.observacionFichaIngresoCapitalHumano = null;
		}

		requerimientoRecursoCacheModel.aprobadoFichaIngresoOperaciones = getAprobadoFichaIngresoOperaciones();

		requerimientoRecursoCacheModel.observacionFichaIngresoOperaciones = getObservacionFichaIngresoOperaciones();

		String observacionFichaIngresoOperaciones = requerimientoRecursoCacheModel.observacionFichaIngresoOperaciones;

		if ((observacionFichaIngresoOperaciones != null) &&
				(observacionFichaIngresoOperaciones.length() == 0)) {
			requerimientoRecursoCacheModel.observacionFichaIngresoOperaciones = null;
		}

		requerimientoRecursoCacheModel.tipoReclutamiento = getTipoReclutamiento();

		requerimientoRecursoCacheModel.solicitudRequerimientoPersonalId = getSolicitudRequerimientoPersonalId();

		requerimientoRecursoCacheModel.activo = getActivo();

		requerimientoRecursoCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			requerimientoRecursoCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			requerimientoRecursoCacheModel.fechacrea = Long.MIN_VALUE;
		}

		requerimientoRecursoCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechacreamodifica = getFechacreamodifica();

		if (fechacreamodifica != null) {
			requerimientoRecursoCacheModel.fechacreamodifica = fechacreamodifica.getTime();
		}
		else {
			requerimientoRecursoCacheModel.fechacreamodifica = Long.MIN_VALUE;
		}

		return requerimientoRecursoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(53);

		sb.append("{requerimientoRecursoId=");
		sb.append(getRequerimientoRecursoId());
		sb.append(", especialidad=");
		sb.append(getEspecialidad());
		sb.append(", meta=");
		sb.append(getMeta());
		sb.append(", prioridad=");
		sb.append(getPrioridad());
		sb.append(", motivo=");
		sb.append(getMotivo());
		sb.append(", fechaSolicitada=");
		sb.append(getFechaSolicitada());
		sb.append(", fechaMetaIngreso=");
		sb.append(getFechaMetaIngreso());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append(", modalidad=");
		sb.append(getModalidad());
		sb.append(", lugarTrabajo=");
		sb.append(getLugarTrabajo());
		sb.append(", observacion=");
		sb.append(getObservacion());
		sb.append(", proyecto=");
		sb.append(getProyecto());
		sb.append(", requiereequipotenico=");
		sb.append(getRequiereequipotenico());
		sb.append(", reemplazo=");
		sb.append(getReemplazo());
		sb.append(", revisado=");
		sb.append(getRevisado());
		sb.append(", aprobadoFichaIngresoCapitalHumano=");
		sb.append(getAprobadoFichaIngresoCapitalHumano());
		sb.append(", observacionFichaIngresoCapitalHumano=");
		sb.append(getObservacionFichaIngresoCapitalHumano());
		sb.append(", aprobadoFichaIngresoOperaciones=");
		sb.append(getAprobadoFichaIngresoOperaciones());
		sb.append(", observacionFichaIngresoOperaciones=");
		sb.append(getObservacionFichaIngresoOperaciones());
		sb.append(", tipoReclutamiento=");
		sb.append(getTipoReclutamiento());
		sb.append(", solicitudRequerimientoPersonalId=");
		sb.append(getSolicitudRequerimientoPersonalId());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechacreamodifica=");
		sb.append(getFechacreamodifica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(82);

		sb.append("<model><model-name>");
		sb.append("com.rec.hitss.layer.model.RequerimientoRecurso");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>requerimientoRecursoId</column-name><column-value><![CDATA[");
		sb.append(getRequerimientoRecursoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>especialidad</column-name><column-value><![CDATA[");
		sb.append(getEspecialidad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>meta</column-name><column-value><![CDATA[");
		sb.append(getMeta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>prioridad</column-name><column-value><![CDATA[");
		sb.append(getPrioridad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>motivo</column-name><column-value><![CDATA[");
		sb.append(getMotivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaSolicitada</column-name><column-value><![CDATA[");
		sb.append(getFechaSolicitada());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaMetaIngreso</column-name><column-value><![CDATA[");
		sb.append(getFechaMetaIngreso());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modalidad</column-name><column-value><![CDATA[");
		sb.append(getModalidad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lugarTrabajo</column-name><column-value><![CDATA[");
		sb.append(getLugarTrabajo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>observacion</column-name><column-value><![CDATA[");
		sb.append(getObservacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>proyecto</column-name><column-value><![CDATA[");
		sb.append(getProyecto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requiereequipotenico</column-name><column-value><![CDATA[");
		sb.append(getRequiereequipotenico());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reemplazo</column-name><column-value><![CDATA[");
		sb.append(getReemplazo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>revisado</column-name><column-value><![CDATA[");
		sb.append(getRevisado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>aprobadoFichaIngresoCapitalHumano</column-name><column-value><![CDATA[");
		sb.append(getAprobadoFichaIngresoCapitalHumano());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>observacionFichaIngresoCapitalHumano</column-name><column-value><![CDATA[");
		sb.append(getObservacionFichaIngresoCapitalHumano());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>aprobadoFichaIngresoOperaciones</column-name><column-value><![CDATA[");
		sb.append(getAprobadoFichaIngresoOperaciones());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>observacionFichaIngresoOperaciones</column-name><column-value><![CDATA[");
		sb.append(getObservacionFichaIngresoOperaciones());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoReclutamiento</column-name><column-value><![CDATA[");
		sb.append(getTipoReclutamiento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>solicitudRequerimientoPersonalId</column-name><column-value><![CDATA[");
		sb.append(getSolicitudRequerimientoPersonalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacreamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechacreamodifica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RequerimientoRecurso.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			RequerimientoRecurso.class
		};
	private long _requerimientoRecursoId;
	private String _especialidad;
	private String _meta;
	private long _prioridad;
	private String _motivo;
	private Date _fechaSolicitada;
	private String _fechaMetaIngreso;
	private String _estado;
	private long _modalidad;
	private String _lugarTrabajo;
	private String _observacion;
	private String _proyecto;
	private boolean _requiereequipotenico;
	private boolean _reemplazo;
	private boolean _revisado;
	private boolean _aprobadoFichaIngresoCapitalHumano;
	private String _observacionFichaIngresoCapitalHumano;
	private boolean _aprobadoFichaIngresoOperaciones;
	private String _observacionFichaIngresoOperaciones;
	private long _tipoReclutamiento;
	private long _solicitudRequerimientoPersonalId;
	private long _originalSolicitudRequerimientoPersonalId;
	private boolean _setOriginalSolicitudRequerimientoPersonalId;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechacreamodifica;
	private long _columnBitmask;
	private RequerimientoRecurso _escapedModel;
}