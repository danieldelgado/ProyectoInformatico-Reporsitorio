/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rec.hitss.layer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rec.hitss.layer.model.Etiqueta;
import com.rec.hitss.layer.model.EtiquetaModel;
import com.rec.hitss.layer.model.EtiquetaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Etiqueta service. Represents a row in the &quot;Etiqueta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rec.hitss.layer.model.EtiquetaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EtiquetaImpl}.
 * </p>
 *
 * @author Crossfire
 * @see EtiquetaImpl
 * @see com.rec.hitss.layer.model.Etiqueta
 * @see com.rec.hitss.layer.model.EtiquetaModel
 * @generated
 */
@JSON(strict = true)
public class EtiquetaModelImpl extends BaseModelImpl<Etiqueta>
	implements EtiquetaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a etiqueta model instance should use the {@link com.rec.hitss.layer.model.Etiqueta} interface instead.
	 */
	public static final String TABLE_NAME = "Etiqueta";
	public static final Object[][] TABLE_COLUMNS = {
			{ "etiquetaId", Types.BIGINT },
			{ "tagId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Etiqueta (etiquetaId LONG not null primary key,tagId LONG,groupId LONG,companyId LONG)";
	public static final String TABLE_SQL_DROP = "drop table Etiqueta";
	public static final String ORDER_BY_JPQL = " ORDER BY etiqueta.etiquetaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Etiqueta.etiquetaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rec.hitss.layer.model.Etiqueta"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rec.hitss.layer.model.Etiqueta"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Etiqueta toModel(EtiquetaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Etiqueta model = new EtiquetaImpl();

		model.setEtiquetaId(soapModel.getEtiquetaId());
		model.setTagId(soapModel.getTagId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Etiqueta> toModels(EtiquetaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Etiqueta> models = new ArrayList<Etiqueta>(soapModels.length);

		for (EtiquetaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rec.hitss.layer.model.Etiqueta"));

	public EtiquetaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _etiquetaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEtiquetaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _etiquetaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Etiqueta.class;
	}

	@Override
	public String getModelClassName() {
		return Etiqueta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("etiquetaId", getEtiquetaId());
		attributes.put("tagId", getTagId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long etiquetaId = (Long)attributes.get("etiquetaId");

		if (etiquetaId != null) {
			setEtiquetaId(etiquetaId);
		}

		Long tagId = (Long)attributes.get("tagId");

		if (tagId != null) {
			setTagId(tagId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}
	}

	@JSON
	@Override
	public long getEtiquetaId() {
		return _etiquetaId;
	}

	@Override
	public void setEtiquetaId(long etiquetaId) {
		_etiquetaId = etiquetaId;
	}

	@JSON
	@Override
	public long getTagId() {
		return _tagId;
	}

	@Override
	public void setTagId(long tagId) {
		_tagId = tagId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Etiqueta.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Etiqueta toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Etiqueta)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EtiquetaImpl etiquetaImpl = new EtiquetaImpl();

		etiquetaImpl.setEtiquetaId(getEtiquetaId());
		etiquetaImpl.setTagId(getTagId());
		etiquetaImpl.setGroupId(getGroupId());
		etiquetaImpl.setCompanyId(getCompanyId());

		etiquetaImpl.resetOriginalValues();

		return etiquetaImpl;
	}

	@Override
	public int compareTo(Etiqueta etiqueta) {
		long primaryKey = etiqueta.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Etiqueta)) {
			return false;
		}

		Etiqueta etiqueta = (Etiqueta)obj;

		long primaryKey = etiqueta.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Etiqueta> toCacheModel() {
		EtiquetaCacheModel etiquetaCacheModel = new EtiquetaCacheModel();

		etiquetaCacheModel.etiquetaId = getEtiquetaId();

		etiquetaCacheModel.tagId = getTagId();

		etiquetaCacheModel.groupId = getGroupId();

		etiquetaCacheModel.companyId = getCompanyId();

		return etiquetaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{etiquetaId=");
		sb.append(getEtiquetaId());
		sb.append(", tagId=");
		sb.append(getTagId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.rec.hitss.layer.model.Etiqueta");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>etiquetaId</column-name><column-value><![CDATA[");
		sb.append(getEtiquetaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tagId</column-name><column-value><![CDATA[");
		sb.append(getTagId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Etiqueta.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Etiqueta.class
		};
	private long _etiquetaId;
	private long _tagId;
	private long _groupId;
	private long _companyId;
	private Etiqueta _escapedModel;
}