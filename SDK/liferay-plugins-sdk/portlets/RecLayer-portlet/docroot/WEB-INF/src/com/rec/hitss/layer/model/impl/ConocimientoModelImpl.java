/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rec.hitss.layer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rec.hitss.layer.model.Conocimiento;
import com.rec.hitss.layer.model.ConocimientoModel;
import com.rec.hitss.layer.model.ConocimientoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Conocimiento service. Represents a row in the &quot;Conocimiento&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rec.hitss.layer.model.ConocimientoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ConocimientoImpl}.
 * </p>
 *
 * @author Crossfire
 * @see ConocimientoImpl
 * @see com.rec.hitss.layer.model.Conocimiento
 * @see com.rec.hitss.layer.model.ConocimientoModel
 * @generated
 */
@JSON(strict = true)
public class ConocimientoModelImpl extends BaseModelImpl<Conocimiento>
	implements ConocimientoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a conocimiento model instance should use the {@link com.rec.hitss.layer.model.Conocimiento} interface instead.
	 */
	public static final String TABLE_NAME = "Conocimiento";
	public static final Object[][] TABLE_COLUMNS = {
			{ "conocimientoId", Types.BIGINT },
			{ "descripcion", Types.VARCHAR },
			{ "etiquetaId", Types.BIGINT },
			{ "nivel", Types.VARCHAR },
			{ "herramiento", Types.VARCHAR },
			{ "implementacion", Types.VARCHAR },
			{ "activo", Types.BOOLEAN },
			{ "usuariocrea", Types.BIGINT },
			{ "fechacrea", Types.TIMESTAMP },
			{ "usuariomodifica", Types.BIGINT },
			{ "fechacreamodifica", Types.TIMESTAMP },
			{ "usuarioHitssId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Conocimiento (conocimientoId LONG not null primary key,descripcion VARCHAR(75) null,etiquetaId LONG,nivel VARCHAR(75) null,herramiento VARCHAR(75) null,implementacion VARCHAR(75) null,activo BOOLEAN,usuariocrea LONG,fechacrea DATE null,usuariomodifica LONG,fechacreamodifica DATE null,usuarioHitssId LONG)";
	public static final String TABLE_SQL_DROP = "drop table Conocimiento";
	public static final String ORDER_BY_JPQL = " ORDER BY conocimiento.fechacrea ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Conocimiento.fechacrea ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rec.hitss.layer.model.Conocimiento"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rec.hitss.layer.model.Conocimiento"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Conocimiento toModel(ConocimientoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Conocimiento model = new ConocimientoImpl();

		model.setConocimientoId(soapModel.getConocimientoId());
		model.setDescripcion(soapModel.getDescripcion());
		model.setEtiquetaId(soapModel.getEtiquetaId());
		model.setNivel(soapModel.getNivel());
		model.setHerramiento(soapModel.getHerramiento());
		model.setImplementacion(soapModel.getImplementacion());
		model.setActivo(soapModel.getActivo());
		model.setUsuariocrea(soapModel.getUsuariocrea());
		model.setFechacrea(soapModel.getFechacrea());
		model.setUsuariomodifica(soapModel.getUsuariomodifica());
		model.setFechacreamodifica(soapModel.getFechacreamodifica());
		model.setUsuarioHitssId(soapModel.getUsuarioHitssId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Conocimiento> toModels(ConocimientoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Conocimiento> models = new ArrayList<Conocimiento>(soapModels.length);

		for (ConocimientoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rec.hitss.layer.model.Conocimiento"));

	public ConocimientoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _conocimientoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setConocimientoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _conocimientoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Conocimiento.class;
	}

	@Override
	public String getModelClassName() {
		return Conocimiento.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("conocimientoId", getConocimientoId());
		attributes.put("descripcion", getDescripcion());
		attributes.put("etiquetaId", getEtiquetaId());
		attributes.put("nivel", getNivel());
		attributes.put("herramiento", getHerramiento());
		attributes.put("implementacion", getImplementacion());
		attributes.put("activo", getActivo());
		attributes.put("usuariocrea", getUsuariocrea());
		attributes.put("fechacrea", getFechacrea());
		attributes.put("usuariomodifica", getUsuariomodifica());
		attributes.put("fechacreamodifica", getFechacreamodifica());
		attributes.put("usuarioHitssId", getUsuarioHitssId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long conocimientoId = (Long)attributes.get("conocimientoId");

		if (conocimientoId != null) {
			setConocimientoId(conocimientoId);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Long etiquetaId = (Long)attributes.get("etiquetaId");

		if (etiquetaId != null) {
			setEtiquetaId(etiquetaId);
		}

		String nivel = (String)attributes.get("nivel");

		if (nivel != null) {
			setNivel(nivel);
		}

		String herramiento = (String)attributes.get("herramiento");

		if (herramiento != null) {
			setHerramiento(herramiento);
		}

		String implementacion = (String)attributes.get("implementacion");

		if (implementacion != null) {
			setImplementacion(implementacion);
		}

		Boolean activo = (Boolean)attributes.get("activo");

		if (activo != null) {
			setActivo(activo);
		}

		Long usuariocrea = (Long)attributes.get("usuariocrea");

		if (usuariocrea != null) {
			setUsuariocrea(usuariocrea);
		}

		Date fechacrea = (Date)attributes.get("fechacrea");

		if (fechacrea != null) {
			setFechacrea(fechacrea);
		}

		Long usuariomodifica = (Long)attributes.get("usuariomodifica");

		if (usuariomodifica != null) {
			setUsuariomodifica(usuariomodifica);
		}

		Date fechacreamodifica = (Date)attributes.get("fechacreamodifica");

		if (fechacreamodifica != null) {
			setFechacreamodifica(fechacreamodifica);
		}

		Long usuarioHitssId = (Long)attributes.get("usuarioHitssId");

		if (usuarioHitssId != null) {
			setUsuarioHitssId(usuarioHitssId);
		}
	}

	@JSON
	@Override
	public long getConocimientoId() {
		return _conocimientoId;
	}

	@Override
	public void setConocimientoId(long conocimientoId) {
		_conocimientoId = conocimientoId;
	}

	@JSON
	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	@JSON
	@Override
	public long getEtiquetaId() {
		return _etiquetaId;
	}

	@Override
	public void setEtiquetaId(long etiquetaId) {
		_etiquetaId = etiquetaId;
	}

	@JSON
	@Override
	public String getNivel() {
		if (_nivel == null) {
			return StringPool.BLANK;
		}
		else {
			return _nivel;
		}
	}

	@Override
	public void setNivel(String nivel) {
		_nivel = nivel;
	}

	@JSON
	@Override
	public String getHerramiento() {
		if (_herramiento == null) {
			return StringPool.BLANK;
		}
		else {
			return _herramiento;
		}
	}

	@Override
	public void setHerramiento(String herramiento) {
		_herramiento = herramiento;
	}

	@JSON
	@Override
	public String getImplementacion() {
		if (_implementacion == null) {
			return StringPool.BLANK;
		}
		else {
			return _implementacion;
		}
	}

	@Override
	public void setImplementacion(String implementacion) {
		_implementacion = implementacion;
	}

	@JSON
	@Override
	public boolean getActivo() {
		return _activo;
	}

	@Override
	public boolean isActivo() {
		return _activo;
	}

	@Override
	public void setActivo(boolean activo) {
		_activo = activo;
	}

	@JSON
	@Override
	public long getUsuariocrea() {
		return _usuariocrea;
	}

	@Override
	public void setUsuariocrea(long usuariocrea) {
		_usuariocrea = usuariocrea;
	}

	@JSON
	@Override
	public Date getFechacrea() {
		return _fechacrea;
	}

	@Override
	public void setFechacrea(Date fechacrea) {
		_fechacrea = fechacrea;
	}

	@JSON
	@Override
	public long getUsuariomodifica() {
		return _usuariomodifica;
	}

	@Override
	public void setUsuariomodifica(long usuariomodifica) {
		_usuariomodifica = usuariomodifica;
	}

	@JSON
	@Override
	public Date getFechacreamodifica() {
		return _fechacreamodifica;
	}

	@Override
	public void setFechacreamodifica(Date fechacreamodifica) {
		_fechacreamodifica = fechacreamodifica;
	}

	@JSON
	@Override
	public long getUsuarioHitssId() {
		return _usuarioHitssId;
	}

	@Override
	public void setUsuarioHitssId(long usuarioHitssId) {
		_usuarioHitssId = usuarioHitssId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Conocimiento.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Conocimiento toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Conocimiento)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ConocimientoImpl conocimientoImpl = new ConocimientoImpl();

		conocimientoImpl.setConocimientoId(getConocimientoId());
		conocimientoImpl.setDescripcion(getDescripcion());
		conocimientoImpl.setEtiquetaId(getEtiquetaId());
		conocimientoImpl.setNivel(getNivel());
		conocimientoImpl.setHerramiento(getHerramiento());
		conocimientoImpl.setImplementacion(getImplementacion());
		conocimientoImpl.setActivo(getActivo());
		conocimientoImpl.setUsuariocrea(getUsuariocrea());
		conocimientoImpl.setFechacrea(getFechacrea());
		conocimientoImpl.setUsuariomodifica(getUsuariomodifica());
		conocimientoImpl.setFechacreamodifica(getFechacreamodifica());
		conocimientoImpl.setUsuarioHitssId(getUsuarioHitssId());

		conocimientoImpl.resetOriginalValues();

		return conocimientoImpl;
	}

	@Override
	public int compareTo(Conocimiento conocimiento) {
		int value = 0;

		value = DateUtil.compareTo(getFechacrea(), conocimiento.getFechacrea());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Conocimiento)) {
			return false;
		}

		Conocimiento conocimiento = (Conocimiento)obj;

		long primaryKey = conocimiento.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Conocimiento> toCacheModel() {
		ConocimientoCacheModel conocimientoCacheModel = new ConocimientoCacheModel();

		conocimientoCacheModel.conocimientoId = getConocimientoId();

		conocimientoCacheModel.descripcion = getDescripcion();

		String descripcion = conocimientoCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			conocimientoCacheModel.descripcion = null;
		}

		conocimientoCacheModel.etiquetaId = getEtiquetaId();

		conocimientoCacheModel.nivel = getNivel();

		String nivel = conocimientoCacheModel.nivel;

		if ((nivel != null) && (nivel.length() == 0)) {
			conocimientoCacheModel.nivel = null;
		}

		conocimientoCacheModel.herramiento = getHerramiento();

		String herramiento = conocimientoCacheModel.herramiento;

		if ((herramiento != null) && (herramiento.length() == 0)) {
			conocimientoCacheModel.herramiento = null;
		}

		conocimientoCacheModel.implementacion = getImplementacion();

		String implementacion = conocimientoCacheModel.implementacion;

		if ((implementacion != null) && (implementacion.length() == 0)) {
			conocimientoCacheModel.implementacion = null;
		}

		conocimientoCacheModel.activo = getActivo();

		conocimientoCacheModel.usuariocrea = getUsuariocrea();

		Date fechacrea = getFechacrea();

		if (fechacrea != null) {
			conocimientoCacheModel.fechacrea = fechacrea.getTime();
		}
		else {
			conocimientoCacheModel.fechacrea = Long.MIN_VALUE;
		}

		conocimientoCacheModel.usuariomodifica = getUsuariomodifica();

		Date fechacreamodifica = getFechacreamodifica();

		if (fechacreamodifica != null) {
			conocimientoCacheModel.fechacreamodifica = fechacreamodifica.getTime();
		}
		else {
			conocimientoCacheModel.fechacreamodifica = Long.MIN_VALUE;
		}

		conocimientoCacheModel.usuarioHitssId = getUsuarioHitssId();

		return conocimientoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{conocimientoId=");
		sb.append(getConocimientoId());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", etiquetaId=");
		sb.append(getEtiquetaId());
		sb.append(", nivel=");
		sb.append(getNivel());
		sb.append(", herramiento=");
		sb.append(getHerramiento());
		sb.append(", implementacion=");
		sb.append(getImplementacion());
		sb.append(", activo=");
		sb.append(getActivo());
		sb.append(", usuariocrea=");
		sb.append(getUsuariocrea());
		sb.append(", fechacrea=");
		sb.append(getFechacrea());
		sb.append(", usuariomodifica=");
		sb.append(getUsuariomodifica());
		sb.append(", fechacreamodifica=");
		sb.append(getFechacreamodifica());
		sb.append(", usuarioHitssId=");
		sb.append(getUsuarioHitssId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.rec.hitss.layer.model.Conocimiento");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>conocimientoId</column-name><column-value><![CDATA[");
		sb.append(getConocimientoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>etiquetaId</column-name><column-value><![CDATA[");
		sb.append(getEtiquetaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nivel</column-name><column-value><![CDATA[");
		sb.append(getNivel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>herramiento</column-name><column-value><![CDATA[");
		sb.append(getHerramiento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>implementacion</column-name><column-value><![CDATA[");
		sb.append(getImplementacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activo</column-name><column-value><![CDATA[");
		sb.append(getActivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariocrea</column-name><column-value><![CDATA[");
		sb.append(getUsuariocrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacrea</column-name><column-value><![CDATA[");
		sb.append(getFechacrea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariomodifica</column-name><column-value><![CDATA[");
		sb.append(getUsuariomodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechacreamodifica</column-name><column-value><![CDATA[");
		sb.append(getFechacreamodifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioHitssId</column-name><column-value><![CDATA[");
		sb.append(getUsuarioHitssId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Conocimiento.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Conocimiento.class
		};
	private long _conocimientoId;
	private String _descripcion;
	private long _etiquetaId;
	private String _nivel;
	private String _herramiento;
	private String _implementacion;
	private boolean _activo;
	private long _usuariocrea;
	private Date _fechacrea;
	private long _usuariomodifica;
	private Date _fechacreamodifica;
	private long _usuarioHitssId;
	private Conocimiento _escapedModel;
}